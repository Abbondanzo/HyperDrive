{"version":3,"sources":["webpack://hyperdrive/./src/events/EventBus.ts","webpack://hyperdrive/./src/events/songMute.ts","webpack://hyperdrive/./src/dom/controls/MuteButton.ts","webpack://hyperdrive/./src/events/songPlayPause.ts","webpack://hyperdrive/./src/dom/controls/PlayPauseButton.ts","webpack://hyperdrive/./src/dom/buildControls.ts","webpack://hyperdrive/./src/dom/splash/Splash.ts","webpack://hyperdrive/./src/dom/displaySplash.ts","webpack://hyperdrive/./src/events/frame.ts","webpack://hyperdrive/./src/events/screenAttach.ts","webpack://hyperdrive/./src/events/songFrequency.ts","webpack://hyperdrive/./src/events/songMetadata.ts","webpack://hyperdrive/./src/events/songSkip.ts","webpack://hyperdrive/./src/events/songSpeed.ts","webpack://hyperdrive/./src/utils/constants.ts","webpack://hyperdrive/./src/manager/AudioManager.ts","webpack://hyperdrive/./src/events/windowResize.ts","webpack://hyperdrive/./src/events/lockedMousemove.ts","webpack://hyperdrive/./src/events/lockedMousedown.ts","webpack://hyperdrive/./src/scene/controls/BetterPointerLockControls.ts","webpack://hyperdrive/./src/manager/CameraManager.ts","webpack://hyperdrive/./src/manager/EventManager.ts","webpack://hyperdrive/./src/scene/shaders/BadTVShader.ts","webpack://hyperdrive/./src/scene/shaders/badtv_frag.glsl","webpack://hyperdrive/./src/scene/shaders/badtv_vert.glsl","webpack://hyperdrive/./src/scene/shaders/StaticShader.ts","webpack://hyperdrive/./src/scene/shaders/static_frag.glsl","webpack://hyperdrive/./src/scene/shaders/static_vert.glsl","webpack://hyperdrive/./src/scene/shaders/CRTShader.ts","webpack://hyperdrive/./src/scene/shaders/crt_frag.glsl","webpack://hyperdrive/./src/scene/shaders/crt_vert.glsl","webpack://hyperdrive/./src/scene/postprocessing/Composer.ts","webpack://hyperdrive/./src/manager/SceneManager.ts","webpack://hyperdrive/./src/manager/TimeManager.ts","webpack://hyperdrive/./src/audio/songs.ts","webpack://hyperdrive/./src/scene/audio/Songs.ts","webpack://hyperdrive/./src/scene/background/SkyBox.ts","webpack://hyperdrive/./src/utils/loadGLTF.ts","webpack://hyperdrive/./src/scene/car/SongControls.ts","webpack://hyperdrive/./src/scene/car/SongMetadata.ts","webpack://hyperdrive/./src/scene/car/Speedometer.ts","webpack://hyperdrive/./src/scene/car/ScreenDOM.ts","webpack://hyperdrive/./src/scene/shaders/VisualizerShader.ts","webpack://hyperdrive/./src/scene/shaders/visualizer_frag.glsl","webpack://hyperdrive/./src/scene/shaders/visualizer_vert.glsl","webpack://hyperdrive/./src/scene/car/SongVisualizer.ts","webpack://hyperdrive/./src/scene/car/Screen.ts","webpack://hyperdrive/./src/scene/car/Car.ts","webpack://hyperdrive/./src/utils/addToWindow.ts","webpack://hyperdrive/./src/scene/cube/Cube.ts","webpack://hyperdrive/./src/scene/environment/Lighting.ts","webpack://hyperdrive/./src/scene/environment/Mountains.ts","webpack://hyperdrive/./src/scene/road/MovingObject.ts","webpack://hyperdrive/./src/scene/road/Pavement.ts","webpack://hyperdrive/./src/scene/road/Lamps.ts","webpack://hyperdrive/./src/scene/road/Buildings.ts","webpack://hyperdrive/./src/scene/road/Road.ts","webpack://hyperdrive/./src/scene/buildScene.ts","webpack://hyperdrive/./src/index.ts","webpack://hyperdrive/./src/dom/displayError.ts","webpack://hyperdrive/webpack/bootstrap","webpack://hyperdrive/webpack/runtime/compat get default export","webpack://hyperdrive/webpack/runtime/define property getters","webpack://hyperdrive/webpack/runtime/global","webpack://hyperdrive/webpack/runtime/hasOwnProperty shorthand","webpack://hyperdrive/webpack/runtime/jsonp chunk loading","webpack://hyperdrive/webpack/startup"],"names":["this","listeners","type","scope","addEventListener","callback","removeEventListener","dispatch","args","push","filter","t","c","s","arg","forEach","listener","call","Object","keys","key","addSongMuteListener","dispatchSongMuteEvent","MuteBotton","handleClick","event","stopPropagation","preventDefault","muted","handleSongMute","button","title","innerHTML","document","createElement","id","addSongPlayPauseListener","dispatchSongPlayPauseEvent","PlayPauseButton","play","handleSongPlayPause","buildControls","container","controls","playPause","appendChild","mute","Splash","loadingManager","onClickCallback","classList","add","buildSplash","src","alt","onload","remove","body","isMobile","textContent","showLoadingManager","noAudioLink","spanContainer","percentHandler","url","loaded","total","Math","round","onStart","onProgress","onLoad","onError","test","window","navigator","userAgent","AUTO_START","addFrameListener","removeFrameListener","dispatchFrameEvent","addScreenAttachListener","dispatchScreenAttachEvent","addSongFrequencyListener","dispatchSongFrequencyEvent","addSongMetadataListener","dispatchSongMetadataEvent","addSongSkipListener","dispatchSongSkipEvent","addSongSpeedListener","dispatchSongSpeedEvent","CSS_DISTANCE","PURPLE","AudioManager","setNewBPM","newBPM","currentBPM","bpm","bpmTimeout","clearTimeout","setTimeout","CHANGE_INTERVAL","handleFrame","analyser","averageFrequency","getAverageFrequency","frequencyData","getFrequencyData","handlePlayPause","pause","handleMute","currentAudio","getCurrentAudio","setVolume","handleSkip","direction","playNext","playPrevious","handleScreenAttach","songs","length","currentSong","song","playOnStart","PLAY_ON_START","nextIndex","getNextSongIndex","isCurrentSongPlaying","startCurrentSong","floor","random","removeVisualization","stop","Uint8Array","FFT_SIZE","prevIndex","audio","source","onended","isPlaying","addWindowResizeListener","dispatchWindowResizeEvent","addLockedMousemoveListener","dispatchLockedMousemoveEvent","addLockedMousedownListener","dispatchLockedMousedownEvent","BetterPointerLockControls","camera","domElement","onMouseDown","isLocked","centerX","target","offsetWidth","centerY","offsetHeight","x","clientX","y","clientY","onMouseMove","movementX","mozMovementX","webkitMovementX","movementY","mozMovementY","webkitMovementY","euler","setFromQuaternion","quaternion","horizontalSensitivity","verticalSensitivity","min","PI_2","minPolarAngle","max","maxPolarAngle","maxRightAngle","maxLeftAngle","setFromEuler","dispatchEvent","CHANGE_EVENT","onPointerlockChange","ownerDocument","pointerLockElement","LOCK_EVENT","UNLOCK_EVENT","onPointerlockError","console","error","PI","vec","connect","disconnect","applyQuaternion","distance","setFromMatrixColumn","matrix","crossVectors","up","position","addScaledVector","requestPointerLock","exitPointerLock","CameraManager","updateSize","width","height","aspect","updateProjectionMatrix","cssCamera","updateCSSCamera","getWorldQuaternion","setRotationFromQuaternion","raycaster","setFromCamera","DEFAULT_FOV","NEAR","FAR","z","element","lock","log","handleResize","innerWidth","innerHeight","BadTVShader","uniforms","tDiffuse","value","time","distortion","distortion2","speed","rollSpeed","fragmentShader","vertexShader","StaticShader","amount","size","CRTShader","scanlineCount","opacity","Composer","scene","renderer","composer","setSize","update","delta","elapsedTime","render","badTVPass","filmPass","staticPass","handleSongFrequency","increase","crtPass","EffectComposer","renderScene","RenderPass","addPass","ssaoPass","SSAOPass","output","SSAO","ShaderPass","FilmShader","renderToScreen","SceneManager","cssRenderer","USE_COMPOSER","warn","antialias","CSS3DRenderer","loop","currentTime","lastTime","frame","lastFrame","requestAnimationFrame","name","artist","durationS","filename","camelot","video","Songs","getRandomSongToLoad","randomIndex","loadAllSongsInBackground","loader","songToSkip","remainingSongs","Promise","all","map","loadSong","loadedSongs","newSongList","randomSong","firstSong","LOAD_REMAINDER_DELAY","loadAsync","then","buffer","setBuffer","setLoop","duration","SkyBox","cubeTexture","setPath","load","fog","parent","background","loadGLTF","path","resolve","reject","GLTFLoader","gltf","group","children","undefined","SongControls","onSkipBackwardClick","onPlayPauseClick","playing","onSkipForwardClick","handleLockedMousedown","isInBounds","back","forward","div","setPlayControls","getBoundingClientRect","top","bottom","left","right","SongMetadata","showNameDiff","diff","parentElement","style","transform","songNameOffset","hideNameDiff","NAME_SCROLL_OFFSET_MS","handleSongMetadata","setSongInfo","artistDiv","nameDiv","checkSongNameOffset","Speedometer","handleSongSpeed","assignSpeed","speedName","speedAmount","numberSpan","speedSuffix","ScreenDOM","checkScreenIntersect","intersectObject","lockPointer","speedometer","appendDivider","metadata","screen","object","divider","className","VisualizerShader","defines","BIN_SIZE","N_BANDS","frequencies","Float32Array","SongVisualizer","material","dataTexture","toDataTexture","geometry","transparent","mesh","set","xRotation","setRotationFromAxisAngle","floatArray","Screen","screenDOM","visualizer","css3dObject","copyWorldPosition","updateWorldMatrix","setIntersect","attach","setRotation","getXRotation","dest","pos","multiplyScalar","rotationX","rotateX","applyScale","updateMatrix","boundingBox","deltaX","abs","deltaY","atan","Car","chassis","applyOffset","castShadow","receiveShadow","item","screenMesh","getScreenMesh","GROUP_NAME","getPointLight","find","child","light","lookAt","Cube","cube","rotation","color","Lighting","ambientLight","intensity","hemisphereLight","pointLight","Mountains","assignRandomDiffs","zDiffs","Array","vertices","fill","plane","Z_DISTANCE","idx","verticesNeedUpdate","normalsNeedUpdate","MovingObject","newOffset","MS_PER_MINUTE","offsetMultiplier","offsetPerMS","Pavement","texture","offset","SQUARE_SIZE","DISTANCE","OFFSET_MULTIPLIER","wrapS","repeat","anisotropy","shininess","NINTETY_DEGREES","Lamps","GAP_DISTANCE","lampsGroup","lampModel","leftSide","buildSide","rightSide","sideGroup","zOffset","TOTAL_DISTANCE","lampItem","clone","scale","addLightToLamp","lamp","spotlight","penumbra","setFromObject","Buildings","leftInstance","lastZOffset","FULL_SQUARE_SIZE","iterations","zRow","computeRow","ROTATE_O","computeRotateO","rightInstance","MAX_WIDTH_SQUARES","instanceCount","wrapT","buildingMesh","baseSize","minHeight","VERTICAL_SCALE","boxGeometry","instanceMatrix","setUsage","zIterOffset","setMatrixAt","setPosition","needsUpdate","closestRow","stepSize","ROTATE_AFFECTED_ROWS","theta","step","ROTATE_MIN","applyRowRotation","instancedMesh","mIdx","getMatrixAt","decompose","yOffset","setFromAxisAngle","compose","Road","subjects","CAR_X_OFFSET","buildScene","sceneSubjects","subject","measurePromise","fn","onPromiseDone","performance","now","start","launch","withSound","splashContainer","getElementById","canvasContainer","textAlign","splash","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","m","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","installedChunks","179","deferredModules","checkDeferredModules","checkDeferredModulesImpl","result","i","deferredModule","fulfilled","j","depId","splice","chunkLoadingGlobal","slice","webpackJsonpCallback","data","chunkId","chunkIds","moreModules","runtime","executeModules","resolves","parentChunkLoadingFunction","shift","apply","bind"],"mappings":"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","file":"static/js/main.js","sourcesContent":["interface Listener<T> {\n  type: string;\n  callback: (args: T) => void;\n  scope?: any;\n}\n\ntype Callback<A> = (arg: A) => void;\n\nclass EventBus {\n  private readonly listeners: { [key: string]: Listener<any>[] };\n\n  constructor() {\n    this.listeners = {};\n  }\n\n  buildEvent<EventBusArg>(type: string, scope?: any) {\n    const addEventListener = (callback: Callback<EventBusArg>) =>\n      this.addEventListener<EventBusArg>(type, callback, scope);\n    const removeEventListener = (callback: Callback<EventBusArg>) =>\n      this.removeEventListener(type, callback, scope);\n    const dispatch = (args: EventBusArg) => this.dispatch(type, args);\n    return {\n      addEventListener,\n      removeEventListener,\n      dispatch,\n    };\n  }\n\n  addEventListener<A>(type: string, callback: Callback<A>, scope?: any) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.removeEventListener(type, callback, scope);\n    this.listeners[type].push({ type, callback, scope });\n  }\n\n  removeEventListener<A>(type: string, callback: Callback<A>, scope?: any) {\n    if (!this.listeners[type]) {\n      return;\n    }\n    this.listeners[type] = this.listeners[type].filter(\n      ({ type: t, callback: c, scope: s }) =>\n        !(type === t && callback === c && scope === s)\n    );\n  }\n\n  dispatch<A>(type: string, arg: A) {\n    if (!this.listeners[type]) {\n      return;\n    }\n    this.listeners[type].forEach((listener) => {\n      if (type === listener.type) {\n        listener.callback.call(listener.scope || null, arg);\n      }\n    });\n  }\n\n  reset() {\n    Object.keys(this.listeners).forEach((key) => {\n      delete this.listeners[key];\n    });\n  }\n}\n\nexport default new EventBus();\n","import EventBus from \"./EventBus\";\n\nexport interface SongMuteEvent {\n  muted: boolean;\n}\n\nconst SONG_MUTE = \"SONG_MUTE\";\n\nexport const {\n  addEventListener: addSongMuteListener,\n  removeEventListener: removeSongMuteListener,\n  dispatch: dispatchSongMuteEvent,\n} = EventBus.buildEvent<SongMuteEvent>(SONG_MUTE);\n","import \"@fortawesome/fontawesome-free/js/all\";\n\nimport {\n  addSongMuteListener,\n  dispatchSongMuteEvent,\n  SongMuteEvent,\n} from \"../../events/songMute\";\n\nexport class MuteBotton {\n  readonly button: HTMLButtonElement;\n\n  private muted: boolean;\n\n  constructor() {\n    this.button = document.createElement(\"button\");\n    this.button.id = \"mute\";\n    this.button.addEventListener(\"click\", this.handleClick);\n    this.handleSongMute({ muted: false });\n    addSongMuteListener(this.handleSongMute);\n  }\n\n  private readonly handleClick = (event: Event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    dispatchSongMuteEvent({ muted: !this.muted });\n  };\n\n  private readonly handleSongMute = ({ muted }: SongMuteEvent) => {\n    this.muted = muted;\n    this.button.title = \"Toggle volume\";\n    if (muted) {\n      this.button.innerHTML = \"<i class='fas fa-volume-mute' />\";\n    } else {\n      this.button.innerHTML = \"<i class='fas fa-volume-up' />\";\n    }\n  };\n}\n","import EventBus from \"./EventBus\";\n\nexport interface SongPlayPauseEvent {\n  play: boolean;\n}\n\nconst SONG_PLAY_PAUSE = \"SONG_PLAY_PAUSE\";\n\nexport const {\n  addEventListener: addSongPlayPauseListener,\n  removeEventListener: removeSongPlayPauseListener,\n  dispatch: dispatchSongPlayPauseEvent,\n} = EventBus.buildEvent<SongPlayPauseEvent>(SONG_PLAY_PAUSE);\n","import \"@fortawesome/fontawesome-free/js/all\";\n\nimport {\n  addSongPlayPauseListener,\n  dispatchSongPlayPauseEvent,\n  SongPlayPauseEvent,\n} from \"../../events/songPlayPause\";\n\nexport class PlayPauseButton {\n  readonly button: HTMLButtonElement;\n\n  private play: boolean;\n\n  constructor() {\n    this.button = document.createElement(\"button\");\n    this.button.id = \"play-pause\";\n    this.button.addEventListener(\"click\", this.handleClick);\n    this.handleSongPlayPause({ play: true });\n    addSongPlayPauseListener(this.handleSongPlayPause);\n  }\n\n  private readonly handleClick = (event: Event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    dispatchSongPlayPauseEvent({ play: !this.play });\n  };\n\n  private readonly handleSongPlayPause = ({ play }: SongPlayPauseEvent) => {\n    this.play = play;\n    if (play) {\n      this.button.innerHTML = \"<i class='fas fa-pause' />\";\n      this.button.title = \"Pause\";\n    } else {\n      this.button.innerHTML = \"<i class='fas fa-play' />\";\n      this.button.title = \"Play\";\n    }\n  };\n}\n","import { MuteBotton } from \"./controls/MuteButton\";\nimport { PlayPauseButton } from \"./controls/PlayPauseButton\";\n\nexport const buildControls = (container: HTMLElement) => {\n  const controls = document.createElement(\"div\");\n  controls.id = \"controls\";\n  const playPause = new PlayPauseButton();\n  controls.appendChild(playPause.button);\n  const mute = new MuteBotton();\n  controls.appendChild(mute.button);\n\n  container.appendChild(controls);\n};\n","import { LoadingManager } from \"three\";\n\nimport { isDevelopment } from \"../../utils/isDevelopment\";\n\ntype Callback = (loadingManager: LoadingManager, withSound: boolean) => void;\n\nexport class Splash {\n  private static AUTO_START = true;\n\n  readonly container: HTMLDivElement;\n\n  private readonly onClickCallback: Callback;\n  private readonly loadingManager: LoadingManager;\n\n  constructor(callback: Callback) {\n    this.loadingManager = new LoadingManager();\n    this.container = document.createElement(\"div\");\n    this.container.id = \"splash\";\n    this.onClickCallback = callback;\n\n    // Perform auto starts to speed up development\n    if (isDevelopment() && Splash.AUTO_START) {\n      this.showLoadingManager();\n      this.onClickCallback(this.loadingManager, false);\n    } else {\n      this.container.classList.add(\"hidden\");\n      this.buildSplash();\n    }\n  }\n\n  private buildSplash() {\n    const title = document.createElement(\"img\");\n    title.src = \"images/logo_b.png\";\n    title.alt = \"Logo\";\n    title.title = \"HyperDrive\";\n    title.onload = () => {\n      this.container.classList.remove(\"hidden\");\n      this.container.classList.add(\"fade-in\");\n    };\n    this.container.appendChild(title);\n    //\n    const body = document.createElement(\"p\");\n    const isMobile = this.isMobile();\n    body.textContent = isMobile\n      ? \"For the full experience, please open this page on a desktop\"\n      : \"For the best possible experience, please use headphones\";\n    this.container.appendChild(body);\n    //\n    const button = document.createElement(\"button\");\n    button.innerHTML = \"Launch\";\n    button.addEventListener(\"click\", () => {\n      this.showLoadingManager();\n      this.onClickCallback(this.loadingManager, true);\n    });\n    this.container.appendChild(button);\n    //\n    const noAudioLink = document.createElement(\"a\");\n    noAudioLink.innerHTML = \"Launch Without Sound\";\n    noAudioLink.addEventListener(\"click\", () => {\n      this.showLoadingManager();\n      this.onClickCallback(this.loadingManager, false);\n    });\n    const spanContainer = document.createElement(\"span\");\n    spanContainer.appendChild(noAudioLink);\n    this.container.appendChild(spanContainer);\n  }\n\n  private showLoadingManager() {\n    this.container.innerHTML = \"\";\n    //\n    const title = document.createElement(\"h3\");\n    title.innerHTML = \"Loading Scene Assets:\";\n    this.container.appendChild(title);\n    //\n    const body = document.createElement(\"p\");\n    body.innerHTML = \"0%\";\n    this.container.appendChild(body);\n    //\n    const percentHandler = (url: string, loaded: number, total: number) => {\n      body.innerHTML = `${Math.round((loaded / total) * 100)}% <br /> ${url}`;\n    };\n    this.loadingManager.onStart = percentHandler;\n    this.loadingManager.onProgress = percentHandler;\n    this.loadingManager.onLoad = () => {\n      body.innerHTML = \"Building scene... <br />\";\n    };\n    this.loadingManager.onError = () => {\n      body.innerHTML =\n        \"There was an error loading. Please refresh and try again\";\n    };\n  }\n\n  private isMobile(): boolean {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      window.navigator.userAgent\n    );\n  }\n}\n","import { LoadingManager } from \"three\";\n\nimport { Splash } from \"./splash/Splash\";\n\ntype Callback = (loadingManager: LoadingManager, withSound: boolean) => void;\n\nexport const displaySplash = (container: HTMLElement, callback: Callback) => {\n  const splash = new Splash(callback);\n  container.appendChild(splash.container);\n};\n","import EventBus from \"./EventBus\";\n\nexport interface FrameEvent {\n  delta: number;\n  elapsedTime: number;\n  frame: number;\n}\n\nconst FRAME = \"FRAME\";\n\nexport const {\n  addEventListener: addFrameListener,\n  removeEventListener: removeFrameListener,\n  dispatch: dispatchFrameEvent,\n} = EventBus.buildEvent<FrameEvent>(FRAME);\n","import EventBus from \"./EventBus\";\n\nexport interface ScreenAttachEvent {\n  screen: HTMLElement;\n}\n\nconst SCREEN_ATTACH = \"SCREEN_ATTACH\";\n\nexport const {\n  addEventListener: addScreenAttachListener,\n  removeEventListener: removeScreenAttachListener,\n  dispatch: dispatchScreenAttachEvent,\n} = EventBus.buildEvent<ScreenAttachEvent>(SCREEN_ATTACH);\n","import EventBus from \"./EventBus\";\n\nexport interface SongFrequencyEvent {\n  frequencyData: Uint8Array;\n  averageFrequency: number;\n}\n\nconst SONG_FREQUENCY = \"SONG_FREQUENCY\";\n\nexport const {\n  addEventListener: addSongFrequencyListener,\n  removeEventListener: removeSongFrequencyListener,\n  dispatch: dispatchSongFrequencyEvent,\n} = EventBus.buildEvent<SongFrequencyEvent>(SONG_FREQUENCY);\n","import { Song } from \"./../audio/songs\";\nimport EventBus from \"./EventBus\";\n\nexport interface SongMetadataEvent {\n  song: Song;\n}\n\nconst SONG_METADATA = \"SONG_METADATA\";\n\nexport const {\n  addEventListener: addSongMetadataListener,\n  removeEventListener: removeSongMetadataListener,\n  dispatch: dispatchSongMetadataEvent,\n} = EventBus.buildEvent<SongMetadataEvent>(SONG_METADATA);\n","import EventBus from \"./EventBus\";\n\nexport interface SongSkipEvent {\n  direction: \"forward\" | \"backward\";\n}\n\nconst SONG_SKIP = \"SONG_SKIP\";\n\nexport const {\n  addEventListener: addSongSkipListener,\n  removeEventListener: removeSongSkipListener,\n  dispatch: dispatchSongSkipEvent,\n} = EventBus.buildEvent<SongSkipEvent>(SONG_SKIP);\n","import EventBus from \"./EventBus\";\n\nexport interface SongSpeedEvent {\n  bpm: number;\n}\n\nconst SONG_SPEED = \"SONG_SPEED\";\n\nexport const {\n  addEventListener: addSongSpeedListener,\n  removeEventListener: removeSongSpeedListener,\n  dispatch: dispatchSongSpeedEvent,\n} = EventBus.buildEvent<SongSpeedEvent>(SONG_SPEED);\n","export const FFT_SIZE = 2048;\nexport const N_BANDS = 16;\n\nexport const CSS_DISTANCE = 500;\n\nexport const CAR_X_OFFSET = 0.345;\n\nexport const PURPLE = 0xff00fc;\nexport const YELLOW = 0xfccd05;\n","import { Audio, AudioAnalyser } from \"three\";\n\nimport { Song } from \"../audio/songs\";\nimport { addFrameListener } from \"../events/frame\";\nimport { addScreenAttachListener } from \"../events/screenAttach\";\nimport { dispatchSongFrequencyEvent } from \"../events/songFrequency\";\nimport { dispatchSongMetadataEvent } from \"../events/songMetadata\";\nimport { addSongMuteListener, SongMuteEvent } from \"../events/songMute\";\nimport {\n  addSongPlayPauseListener,\n  dispatchSongPlayPauseEvent,\n  SongPlayPauseEvent,\n} from \"../events/songPlayPause\";\nimport { addSongSkipListener } from \"../events/songSkip\";\nimport { dispatchSongSpeedEvent } from \"../events/songSpeed\";\nimport { FFT_SIZE } from \"../utils/constants\";\nimport { SongSkipEvent } from \"./../events/songSkip\";\n\ninterface SongAudio extends Song {\n  audio: Audio;\n}\n\nclass AudioManager {\n  private static PLAY_ON_START = true;\n  private static CHANGE_INTERVAL = 50;\n\n  private songs: SongAudio[];\n  private currentSong: number | null;\n  private currentBPM: number;\n  private analyser: AudioAnalyser | null;\n  private bpmTimeout: number | null;\n\n  constructor() {\n    this.songs = [];\n    this.currentBPM = 0;\n    this.currentSong = null;\n    this.analyser = null;\n    dispatchSongSpeedEvent({ bpm: this.currentBPM });\n    addFrameListener(this.handleFrame);\n    addSongPlayPauseListener(this.handlePlayPause);\n    addSongMuteListener(this.handleMute);\n    addSongSkipListener(this.handleSkip);\n    addScreenAttachListener(this.handleScreenAttach);\n  }\n\n  attach(songs: SongAudio[]) {\n    this.songs = songs;\n  }\n\n  start(playOnStart: boolean = AudioManager.PLAY_ON_START) {\n    if (this.songs.length === 0) {\n      return;\n    }\n\n    if (playOnStart) {\n      this.play();\n    } else {\n      dispatchSongPlayPauseEvent({ play: false });\n      const nextIndex = this.getNextSongIndex();\n      this.currentSong = nextIndex;\n      this.setNewBPM(this.songs[nextIndex].bpm);\n      dispatchSongMetadataEvent({ song: this.songs[this.currentSong] });\n    }\n  }\n\n  private play() {\n    if (this.songs.length === 0) {\n      return;\n    }\n    if (this.currentSong !== null) {\n      if (!this.isCurrentSongPlaying()) {\n        this.startCurrentSong();\n      }\n    } else {\n      this.currentSong = Math.floor(Math.random() * this.songs.length);\n      this.startCurrentSong();\n    }\n  }\n\n  private pause() {\n    if (this.currentSong !== null && this.songs.length > 0) {\n      this.getCurrentAudio()?.pause();\n    }\n    this.removeVisualization();\n  }\n\n  private stop() {\n    if (this.isCurrentSongPlaying()) {\n      this.getCurrentAudio()?.stop();\n      this.removeVisualization();\n    }\n  }\n\n  private removeVisualization() {\n    this.analyser = null;\n    dispatchSongFrequencyEvent({\n      frequencyData: new Uint8Array(FFT_SIZE / 2),\n      averageFrequency: 0,\n    });\n  }\n\n  private playPrevious() {\n    if (this.songs.length === 0) return;\n    this.stop();\n    let prevIndex = 0;\n    if (this.currentSong !== null) {\n      prevIndex =\n        (this.currentSong - 1 + this.songs.length) % this.songs.length;\n    }\n    this.currentSong = prevIndex;\n    this.startCurrentSong();\n  }\n\n  private playNext() {\n    if (this.songs.length === 0) return;\n    this.stop();\n    const nextIndex = this.getNextSongIndex();\n    this.currentSong = nextIndex;\n    this.startCurrentSong();\n  }\n\n  private startCurrentSong() {\n    const song = this.songs[this.currentSong];\n    this.setNewBPM(song.bpm);\n    song.audio.play();\n\n    this.analyser = new AudioAnalyser(song.audio, FFT_SIZE);\n\n    dispatchSongPlayPauseEvent({ play: true });\n    dispatchSongMetadataEvent({ song: song });\n    // Overrides the internal call to three. Need to set isPlaying manually\n    song.audio.source.onended = () => {\n      song.audio.isPlaying = false;\n      this.playNext();\n    };\n  }\n\n  private getNextSongIndex(): number {\n    if (this.currentSong === null) {\n      return Math.floor(Math.random() * this.songs.length);\n    } else {\n      return (this.currentSong + 1) % this.songs.length;\n    }\n  }\n\n  private getCurrentAudio(): Audio | null {\n    return this.currentSong !== null && this.songs.length > 0\n      ? this.songs[this.currentSong].audio\n      : null;\n  }\n\n  private isCurrentSongPlaying(): boolean {\n    return this.getCurrentAudio()?.isPlaying || false;\n  }\n\n  private readonly setNewBPM = (newBPM: number) => {\n    if (this.currentBPM === 0) {\n      this.currentBPM = newBPM;\n      dispatchSongSpeedEvent({ bpm: this.currentBPM });\n      return;\n    }\n\n    if (this.bpmTimeout !== null) {\n      clearTimeout(this.bpmTimeout);\n    }\n\n    this.bpmTimeout = window.setTimeout(() => {\n      if (newBPM > this.currentBPM) {\n        this.currentBPM += 1;\n        dispatchSongSpeedEvent({ bpm: this.currentBPM });\n        this.setNewBPM(newBPM);\n      } else if (newBPM < this.currentBPM) {\n        this.currentBPM -= 1;\n        dispatchSongSpeedEvent({ bpm: this.currentBPM });\n        this.setNewBPM(newBPM);\n      }\n    }, AudioManager.CHANGE_INTERVAL);\n  };\n\n  private readonly handleFrame = () => {\n    if (this.analyser !== null) {\n      dispatchSongFrequencyEvent({\n        averageFrequency: this.analyser.getAverageFrequency(),\n        frequencyData: this.analyser.getFrequencyData(),\n      });\n    }\n  };\n\n  private readonly handlePlayPause = ({ play }: SongPlayPauseEvent) => {\n    if (play) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  private readonly handleMute = ({ muted }: SongMuteEvent) => {\n    const currentAudio = this.getCurrentAudio();\n    if (muted) {\n      currentAudio?.setVolume(0);\n    } else {\n      currentAudio.setVolume(1);\n    }\n  };\n\n  private readonly handleSkip = ({ direction }: SongSkipEvent) => {\n    if (direction === \"forward\") {\n      this.playNext();\n    } else if (direction === \"backward\") {\n      this.playPrevious();\n    }\n  };\n\n  private readonly handleScreenAttach = () => {\n    if (this.songs.length === 0 || this.currentSong === null) {\n      return;\n    }\n    const song = this.songs[this.currentSong];\n    dispatchSongMetadataEvent({ song });\n  };\n}\n\nexport default new AudioManager();\n","import EventBus from \"./EventBus\";\n\nexport interface WindowResizeEvent {\n  width: number;\n  height: number;\n}\n\nconst WINDOW_RESIZE = \"WINDOW_RESIZE\";\n\nexport const {\n  addEventListener: addWindowResizeListener,\n  removeEventListener: removeWindowResizeListener,\n  dispatch: dispatchWindowResizeEvent,\n} = EventBus.buildEvent<WindowResizeEvent>(WINDOW_RESIZE);\n","import EventBus from \"./EventBus\";\n\nexport interface LockedMousemoveEvent {\n  x: number;\n  y: number;\n}\n\nconst LOCKED_MOUSEMOVE = \"LOCKED_MOUSEMOVE\";\n\nexport const {\n  addEventListener: addLockedMousemoveListener,\n  removeEventListener: removeLockedMousemoveListener,\n  dispatch: dispatchLockedMousemoveEvent,\n} = EventBus.buildEvent<LockedMousemoveEvent>(LOCKED_MOUSEMOVE);\n","import EventBus from \"./EventBus\";\n\nexport interface LockedMousedownEvent {\n  x: number;\n  y: number;\n}\n\nconst LOCKED_MOUSEDOWN = \"LOCKED_MOUSEDOWN\";\n\nexport const {\n  addEventListener: addLockedMousedownListener,\n  removeEventListener: removeLockedMousedownListener,\n  dispatch: dispatchLockedMousedownEvent,\n} = EventBus.buildEvent<LockedMousedownEvent>(LOCKED_MOUSEDOWN);\n","import { Camera, Euler, EventDispatcher, Vector3 } from \"three\";\n\nimport { dispatchLockedMousedownEvent } from \"../../events/lockedMousedown\";\nimport { dispatchLockedMousemoveEvent } from \"../../events/lockedMousemove\";\n\n/**\n * A version of PointerLockControls that supports horizontal locking and sensitivity controls.\n * https://threejs.org/docs/#examples/en/controls/PointerLockControls\n */\nexport class BetterPointerLockControls extends EventDispatcher {\n  private static PI_2 = Math.PI / 2;\n  private static CHANGE_EVENT = { type: \"change\" };\n  private static LOCK_EVENT = { type: \"lock\" };\n  private static UNLOCK_EVENT = { type: \"unlock\" };\n\n  domElement: HTMLElement;\n  isLocked: boolean;\n\n  minPolarAngle: number;\n  maxPolarAngle: number;\n  maxLeftAngle: number | null;\n  maxRightAngle: number | null;\n  verticalSensitivity: number;\n  horizontalSensitivity: number;\n\n  private camera: Camera;\n  private euler: Euler;\n  private vec: Vector3;\n\n  constructor(camera: Camera, domElement: HTMLElement) {\n    super();\n    this.domElement = domElement;\n    this.isLocked = false;\n\n    this.minPolarAngle = 0;\n    this.maxPolarAngle = Math.PI; // 180 degrees\n    this.maxLeftAngle = Math.PI / 2; // 90 degrees\n    this.maxRightAngle = -Math.PI / 2; // -90 degrees\n    this.verticalSensitivity = 0.0015;\n    this.horizontalSensitivity = 0.002;\n\n    this.camera = camera;\n    this.euler = new Euler(0, 0, 0, \"YXZ\");\n    this.vec = new Vector3();\n\n    this.connect();\n  }\n\n  private readonly onMouseDown = (event: any) => {\n    if (this.isLocked === false) return;\n\n    const centerX = event.target?.offsetWidth / 2 || 0;\n    const centerY = event.target?.offsetHeight / 2 || 0;\n    const x = centerX || event.clientX || -1;\n    const y = centerY || event.clientY || -1;\n    dispatchLockedMousedownEvent({ x, y });\n  };\n\n  private readonly onMouseMove = (event: any) => {\n    if (this.isLocked === false) return;\n\n    const centerX = event.target?.offsetWidth / 2 || 0;\n    const centerY = event.target?.offsetHeight / 2 || 0;\n    dispatchLockedMousemoveEvent({ x: centerX, y: centerY });\n\n    const movementX =\n      event.movementX || event.mozMovementX || event.webkitMovementX || 0;\n    const movementY =\n      event.movementY || event.mozMovementY || event.webkitMovementY || 0;\n\n    const euler = this.euler;\n\n    euler.setFromQuaternion(this.camera.quaternion);\n\n    euler.y -= movementX * this.horizontalSensitivity;\n    euler.x -= movementY * this.verticalSensitivity;\n\n    // up/down\n    euler.x = Math.min(\n      BetterPointerLockControls.PI_2 - this.minPolarAngle,\n      euler.x\n    );\n    euler.x = Math.max(\n      BetterPointerLockControls.PI_2 - this.maxPolarAngle,\n      euler.x\n    );\n    // left/right\n    if (this.maxRightAngle !== null) {\n      euler.y = Math.max(euler.y, this.maxRightAngle);\n    }\n    if (this.maxLeftAngle !== null) {\n      euler.y = Math.min(euler.y, this.maxLeftAngle);\n    }\n\n    this.camera.quaternion.setFromEuler(euler);\n\n    this.dispatchEvent(BetterPointerLockControls.CHANGE_EVENT);\n  };\n\n  private readonly onPointerlockChange = () => {\n    if (this.domElement.ownerDocument.pointerLockElement === this.domElement) {\n      this.dispatchEvent(BetterPointerLockControls.LOCK_EVENT);\n      this.isLocked = true;\n    } else {\n      this.dispatchEvent(BetterPointerLockControls.UNLOCK_EVENT);\n      this.isLocked = false;\n    }\n  };\n\n  private readonly onPointerlockError = () => {\n    console.error(\"THREE.PointerLockControls: Unable to use Pointer Lock API\");\n  };\n\n  connect() {\n    this.domElement.ownerDocument.addEventListener(\n      \"mousedown\",\n      this.onMouseDown,\n      false\n    );\n    this.domElement.ownerDocument.addEventListener(\n      \"mousemove\",\n      this.onMouseMove,\n      false\n    );\n    this.domElement.ownerDocument.addEventListener(\n      \"pointerlockchange\",\n      this.onPointerlockChange,\n      false\n    );\n    this.domElement.ownerDocument.addEventListener(\n      \"pointerlockerror\",\n      this.onPointerlockError,\n      false\n    );\n  }\n\n  disconnect() {\n    this.domElement.ownerDocument.removeEventListener(\n      \"mousedown\",\n      this.onMouseDown,\n      false\n    );\n    this.domElement.ownerDocument.removeEventListener(\n      \"mousemove\",\n      this.onMouseMove,\n      false\n    );\n    this.domElement.ownerDocument.removeEventListener(\n      \"pointerlockchange\",\n      this.onPointerlockChange,\n      false\n    );\n    this.domElement.ownerDocument.removeEventListener(\n      \"pointerlockerror\",\n      this.onPointerlockError,\n      false\n    );\n  }\n\n  dispose() {\n    this.disconnect();\n  }\n\n  getDirection() {\n    return new Vector3(0, 0, -1).applyQuaternion(this.camera.quaternion);\n  }\n\n  /**\n   * Move forward parallel to the xz-plane. Assumes camera.up is y-up.\n   *\n   * @param distance\n   */\n  moveForward(distance: number) {\n    this.vec.setFromMatrixColumn(this.camera.matrix, 0);\n    this.vec.crossVectors(this.camera.up, this.vec);\n    this.camera.position.addScaledVector(this.vec, distance);\n  }\n\n  moveRight(distance: number) {\n    this.vec.setFromMatrixColumn(this.camera.matrix, 0);\n    this.camera.position.addScaledVector(this.vec, distance);\n  }\n\n  lock() {\n    this.domElement.requestPointerLock();\n  }\n\n  unlock() {\n    this.domElement.ownerDocument.exitPointerLock();\n  }\n}\n","import { PerspectiveCamera, Quaternion, Raycaster } from \"three\";\n\nimport { addLockedMousemoveListener } from \"../events/lockedMousemove\";\nimport {\n  addWindowResizeListener,\n  WindowResizeEvent,\n} from \"../events/windowResize\";\nimport { BetterPointerLockControls } from \"../scene/controls/BetterPointerLockControls\";\nimport { CSS_DISTANCE } from \"./../utils/constants\";\n\nclass CameraManager {\n  private static DEFAULT_FOV = 60;\n  private static NEAR = 0.1;\n  private static FAR = 500;\n\n  readonly camera: PerspectiveCamera;\n  readonly cssCamera: PerspectiveCamera;\n  readonly raycaster: Raycaster;\n\n  private controls: BetterPointerLockControls;\n  private readonly quaternion: Quaternion;\n\n  constructor() {\n    this.camera = new PerspectiveCamera(\n      CameraManager.DEFAULT_FOV,\n      1,\n      CameraManager.NEAR,\n      CameraManager.FAR\n    );\n    this.cssCamera = new PerspectiveCamera(\n      CameraManager.DEFAULT_FOV,\n      1,\n      CameraManager.NEAR,\n      CameraManager.FAR\n    );\n    this.cssCamera.position.z = CSS_DISTANCE;\n    this.quaternion = new Quaternion();\n    this.raycaster = new Raycaster();\n    addWindowResizeListener(this.updateSize);\n    addLockedMousemoveListener(this.updateCSSCamera);\n  }\n\n  private readonly updateSize = ({ width, height }: WindowResizeEvent) => {\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n    this.cssCamera.aspect = width / height;\n    this.cssCamera.updateProjectionMatrix();\n  };\n\n  private readonly updateCSSCamera = () => {\n    this.camera.getWorldQuaternion(this.quaternion);\n    this.cssCamera.setRotationFromQuaternion(this.quaternion);\n    this.raycaster.setFromCamera({ x: 0, y: 0 }, this.camera);\n  };\n\n  initializeControls(element: HTMLElement) {\n    this.controls = new BetterPointerLockControls(this.camera, element);\n    element.addEventListener(\"click\", () => {\n      if (!this.controls.isLocked) {\n        this.controls.lock();\n      }\n    });\n    this.controls.addEventListener(\"lock\", () => {\n      console.log(\"Controls Locked\");\n    });\n    this.controls.addEventListener(\"unlock\", () => {\n      console.log(\"Controls Unlocked\");\n      this.updateCSSCamera();\n    });\n  }\n}\n\nexport default new CameraManager();\n","import { dispatchWindowResizeEvent } from \"../events/windowResize\";\n\nclass EventManager {\n  addListeners() {\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  removeListeners() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  private readonly handleResize = () => {\n    dispatchWindowResizeEvent({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  };\n}\n\n// Export single class instance\nexport default new EventManager();\n","import fragmentShader from \"./badtv_frag.glsl\";\nimport vertexShader from \"./badtv_vert.glsl\";\n\n// Attribution: https://github.com/felixturner/bad-tv-shader\nexport const BadTVShader = {\n  uniforms: {\n    tDiffuse: { type: \"t\", value: null },\n    time: { type: \"f\", value: 0.0 },\n    distortion: { type: \"f\", value: 3.0 },\n    distortion2: { type: \"f\", value: 5.0 },\n    speed: { type: \"f\", value: 0.2 },\n    rollSpeed: { type: \"f\", value: 0.1 },\n  },\n  fragmentShader,\n  vertexShader,\n};\n","export default \"uniform sampler2D tDiffuse;\\nuniform float time;\\nuniform float distortion;\\nuniform float distortion2;\\nuniform float speed;\\nuniform float rollSpeed;\\n\\nvarying vec2 vUv;\\n\\t\\t\\n// Start Ashima 2D Simplex Noise\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute(vec3 x) {\\n  return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nfloat snoise(vec2 v) {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0,\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0),\\n                      -0.577350269189626,  // -1.0 + 2.0 * C.x,\\n                      0.024390243902439); // 1.0 / 41.0,\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n  vec2 i1;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n  i = mod289(i); // Avoid truncation effects in permutation\\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 )) + i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\\n// End Ashima 2D Simplex Noise\\n\\nvoid main() {\\n  vec2 p = vUv;\\n  float ty = time*speed;\\n  float yt = p.y - ty;\\n  //smooth distortion\\n  float offset = snoise(vec2(yt*3.0,0.0))*0.2;\\n  // boost distortion\\n  offset = offset*distortion * offset*distortion * offset;\\n  //add fine grain distortion\\n  offset += snoise(vec2(yt*50.0,0.0))*distortion2*0.001;\\n  //combine distortion on X with roll on Y\\n  gl_FragColor = texture2D(tDiffuse, vec2(fract(p.x + offset),fract(p.y-time*rollSpeed) ));\\n}\\n\";","export default \"varying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\";","import fragmentShader from \"./static_frag.glsl\";\nimport vertexShader from \"./static_vert.glsl\";\n\nexport const StaticShader = {\n  uniforms: {\n    tDiffuse: { type: \"t\", value: null },\n    time: { type: \"f\", value: 0.0 },\n    amount: { type: \"f\", value: 0.025 },\n    size: { type: \"f\", value: 4.0 },\n  },\n  fragmentShader,\n  vertexShader,\n};\n","export default \"uniform sampler2D tDiffuse;\\nuniform float time;\\nuniform float amount;\\nuniform float size;\\n\\nvarying vec2 vUv;\\n\\nfloat rand(vec2 co) {\\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n}\\n\\nvoid main() {\\n  vec2 p = vUv;\\n  vec4 color = texture2D(tDiffuse, p);\\n  float xs = floor(gl_FragCoord.x / size);\\n  float ys = floor(gl_FragCoord.y / size);\\n  vec4 snow = vec4(rand(vec2(xs * time,ys * time))*amount);\\n  gl_FragColor = color + snow;\\n}\\n\";","export default \"varying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\";","import fragmentShader from \"./crt_frag.glsl\";\nimport vertexShader from \"./crt_vert.glsl\";\n\nexport const CRTShader = {\n  uniforms: {\n    tDiffuse: { type: \"t\", value: null },\n    scanlineCount: { type: \"f\", value: 1200.0 },\n    opacity: { type: \"f\", value: 0.1 },\n  },\n  fragmentShader,\n  vertexShader,\n};\n","export default \"precision mediump float;\\n\\nvarying vec2 vUv;\\n\\nuniform sampler2D tDiffuse;\\nuniform float scanlineCount;\\nuniform float opacity;\\n\\nvoid main() {\\n  vec2 p = vUv;\\n\\n  vec4 texel = texture2D(tDiffuse, p);\\n  vec3 scanlines = vec2(sin(p.y * scanlineCount), cos(p.y * scanlineCount)).xyx;\\n\\n  gl_FragColor = vec4(texel.rgb * (1. + scanlines * opacity), 1.0);\\n}\\n\";","export default \"varying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n\";","import { Camera, Scene, WebGLRenderer } from \"three\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass\";\nimport { SSAOPass } from \"three/examples/jsm/postprocessing/SSAOPass\";\nimport { FilmShader } from \"three/examples/jsm/shaders/FilmShader\";\n\nimport { addFrameListener, FrameEvent } from \"../../events/frame\";\nimport { addSongFrequencyListener } from \"../../events/songFrequency\";\nimport {\n  addWindowResizeListener,\n  WindowResizeEvent,\n} from \"../../events/windowResize\";\nimport { BadTVShader } from \"../shaders/BadTVShader\";\nimport { StaticShader } from \"../shaders/StaticShader\";\nimport { SongFrequencyEvent } from \"./../../events/songFrequency\";\nimport { CRTShader } from \"./../shaders/CRTShader\";\n\nexport class Composer {\n  private readonly composer: EffectComposer;\n\n  private readonly ssaoPass: SSAOPass;\n  private readonly filmPass: ShaderPass;\n  private readonly badTVPass: ShaderPass;\n  private readonly staticPass: ShaderPass;\n  private readonly crtPass: ShaderPass;\n\n  constructor(scene: Scene, camera: Camera, renderer: WebGLRenderer) {\n    this.composer = new EffectComposer(renderer);\n\n    const renderScene = new RenderPass(scene, camera);\n    this.composer.addPass(renderScene);\n\n    this.ssaoPass = new SSAOPass(scene, camera);\n    this.ssaoPass.output = SSAOPass.OUTPUT.SSAO;\n    // this.composer.addPass(ssaoPass);\n\n    this.filmPass = new ShaderPass(FilmShader);\n    // this.composer.addPass(this.filmPass);\n\n    this.staticPass = new ShaderPass(StaticShader);\n    this.staticPass.uniforms[\"amount\"].value = 0.04;\n    this.composer.addPass(this.staticPass);\n\n    this.badTVPass = new ShaderPass(BadTVShader);\n    this.badTVPass.renderToScreen = true;\n    this.badTVPass.uniforms[\"rollSpeed\"].value = 0;\n    this.badTVPass.uniforms[\"distortion\"].value = 0.5;\n    this.badTVPass.uniforms[\"distortion2\"].value = 0.25;\n    this.composer.addPass(this.badTVPass);\n\n    this.crtPass = new ShaderPass(CRTShader);\n    this.composer.addPass(this.crtPass);\n\n    // Subscribers\n    addWindowResizeListener(this.handleResize);\n    addFrameListener(this.update);\n    addSongFrequencyListener(this.handleSongFrequency);\n  }\n\n  private readonly handleResize = ({ width, height }: WindowResizeEvent) => {\n    this.composer.setSize(width, height);\n  };\n\n  private readonly update = ({ delta, elapsedTime }: FrameEvent) => {\n    this.composer.render(delta / 1000);\n    this.badTVPass.uniforms[\"time\"].value = elapsedTime / 1000;\n    this.filmPass.uniforms[\"time\"].value = elapsedTime;\n    this.staticPass.uniforms[\"time\"].value = elapsedTime / 1000;\n  };\n\n  private readonly handleSongFrequency = ({\n    averageFrequency,\n  }: SongFrequencyEvent) => {\n    const increase = (0.3 * averageFrequency) / 255;\n    this.crtPass.uniforms[\"opacity\"].value = 0.1 + increase;\n  };\n}\n","import { Scene, Vector2, WebGLRenderer } from \"three\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport { FilmPass } from \"three/examples/jsm/postprocessing/FilmPass\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass\";\nimport { SSAOPass } from \"three/examples/jsm/postprocessing/SSAOPass\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport { CSS3DRenderer } from \"three/examples/jsm/renderers/CSS3DRenderer\";\n\nimport {\n  addFrameListener,\n  FrameEvent,\n  removeFrameListener,\n} from \"../events/frame\";\nimport {\n  addWindowResizeListener,\n  dispatchWindowResizeEvent,\n  WindowResizeEvent,\n} from \"../events/windowResize\";\nimport { BadTVShader } from \"../scene/shaders/BadTVShader\";\nimport CameraManager from \"./CameraManager\";\nimport EventManager from \"./EventManager\";\nimport { Composer } from \"../scene/postprocessing/Composer\";\n\nclass SceneManager {\n  private static USE_COMPOSER = true;\n\n  readonly scene: Scene;\n\n  private readonly renderer: WebGLRenderer;\n  private readonly cssRenderer: CSS3DRenderer;\n  private readonly composer: Composer;\n\n  constructor() {\n    this.scene = new Scene();\n    this.scene.add(CameraManager.camera);\n    this.renderer = new WebGLRenderer({ antialias: true });\n    this.cssRenderer = new CSS3DRenderer();\n\n    this.composer = new Composer(\n      this.scene,\n      CameraManager.camera,\n      this.renderer\n    );\n\n    addFrameListener(this.update);\n    addWindowResizeListener(this.handleResize);\n  }\n\n  attach(element: HTMLElement) {\n    element.appendChild(this.renderer.domElement);\n    this.cssRenderer.domElement.id = \"css-renderer\";\n    element.appendChild(this.cssRenderer.domElement);\n    EventManager.addListeners();\n    CameraManager.initializeControls(element);\n    // Dispatch a global event to check the height since we've now attached our canvas\n    dispatchWindowResizeEvent({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  }\n\n  private readonly handleResize = ({ width, height }: WindowResizeEvent) => {\n    this.renderer.setSize(width, height);\n    this.cssRenderer.setSize(width, height);\n  };\n\n  private update = ({ delta }: FrameEvent) => {\n    try {\n      this.cssRenderer.render(this.scene, CameraManager.cssCamera);\n      if (!SceneManager.USE_COMPOSER) {\n        this.renderer.render(this.scene, CameraManager.camera);\n      }\n    } catch (error) {\n      console.warn(error);\n      removeFrameListener(this.update);\n    }\n  };\n}\n\n// Export single class instance\nexport default new SceneManager();\n","import { dispatchFrameEvent } from \"../events/frame\";\n\nclass TimeManager {\n  private lastTime: number | null;\n  private lastFrame: number;\n\n  constructor() {\n    this.lastTime = null;\n    this.lastFrame = 0;\n  }\n\n  play() {\n    // Don't attempt to reset if we're already playing\n    if (this.lastTime) {\n      return;\n    }\n    // Grab a time so that the loop doesn't exit early\n    requestAnimationFrame((time) => {\n      this.lastTime = time;\n    });\n    // Assign the frame of calling to loop\n    this.lastFrame = requestAnimationFrame(this.loop);\n  }\n\n  pause() {\n    this.lastTime = null;\n  }\n\n  private readonly loop = (currentTime: number) => {\n    // If lastTime is null, this means we should pause\n    if (this.lastTime === null) {\n      return;\n    }\n    const delta = currentTime - this.lastTime;\n    this.lastTime = currentTime;\n    dispatchFrameEvent({\n      delta,\n      elapsedTime: currentTime,\n      frame: this.lastFrame + 1,\n    });\n    this.lastFrame = requestAnimationFrame(this.loop);\n  };\n}\n\nexport default new TimeManager();\n","export interface Song {\n  bpm: number;\n  durationS: number; // in seconds\n  name: string;\n  artist: string;\n  filename: string;\n  camelot: string; // Used for mixing songs with the same key\n  video: string;\n}\n\n// https://tunebat.com/Info/Now-or-Never-You-and-Me-Dan-Mason-/1LPyWPhlOAjSFDfj5yhhWH\nconst DAN_MASON_NOW_OR_NEVER: Song = {\n  name: \"Now or Never (You and Me)\",\n  artist: \"Dan Mason\",\n  bpm: 88,\n  durationS: 286,\n  filename: \"dan_mason_now_or_never.mp3\",\n  camelot: \"4A\",\n  video: \"https://youtube.com/watch?v=B-DnLyT1pOc\",\n};\n\n// https://tunebat.com/Info/22-39-Danger/5PDKajOvt9yMVCsgQhYcMn\nconst DANGER_2239: Song = {\n  name: \"22:39\",\n  artist: \"Danger\",\n  bpm: 118,\n  durationS: 252,\n  filename: \"danger_2239.mp3\",\n  camelot: \"3A\",\n  video: \"https://youtube.com/watch?v=S7Q7lpA5I9E\",\n};\n\n// https://tunebat.com/Info/Head-First-Home/3tjwjBfPO1pyjhnrI0J5Nq\nconst HOME_HEAD_FIRST: Song = {\n  name: \"Head First\",\n  artist: \"Home\",\n  bpm: 134,\n  durationS: 213,\n  filename: \"home_head_first.mp3\",\n  camelot: \"4A\",\n  video: \"https://youtube.com/watch?v=zeiwxt0EP4s\",\n};\n\n// https://tunebat.com/Info/Resonance-Home/1TuopWDIuDi1553081zvuU\nconst HOME_RESONANCE: Song = {\n  name: \"Resonance\",\n  artist: \"Home\",\n  bpm: 170,\n  durationS: 212,\n  filename: \"home_resonance.mp3\",\n  camelot: \"4B\",\n  video: \"https://youtube.com/watch?v=8GW6sLrK40k\",\n};\n\n// https://tunebat.com/Info/Over-Easy-Stst/5TrTRbz0W5deKf9EZJ4DRp\nconst STST_OVER_EASY: Song = {\n  name: \"Over Easy\",\n  artist: \"Stst\",\n  bpm: 122,\n  durationS: 163,\n  filename: \"stst_over_easy.mp3\",\n  camelot: \"9B\",\n  video: \"https://www.youtube.com/watch?v=Z6mxU1cMsCo\",\n};\n\n// https://tunebat.com/Info/Dynamic-Voyage/1xDZYFJaDsDw4C4xatOyTM\nconst VOYAGE_DYNAMIC: Song = {\n  name: \"Dynamic\",\n  artist: \"Voyage\",\n  bpm: 115,\n  durationS: 220,\n  filename: \"voyage_dynamic.mp3\",\n  camelot: \"12A\",\n  video: \"https://www.youtube.com/watch?v=CTT9nY5S7YU\",\n};\n\n// https://tunebat.com/Info/Ether-Limitless-Pauline-Herr/2OUhP9TtNIjciR7HRVTjTe\nconst LIMITLESS_ETHER: Song = {\n  name: \"Ether\",\n  artist: \"Limitless\",\n  bpm: 95,\n  durationS: 229,\n  filename: \"limitless_ether.mp3\",\n  camelot: \"8B\",\n  video: \"https://www.youtube.com/watch?v=LTXucOshZ_c\",\n};\n\n// https://tunebat.com/Info/Eclipse-Hotel-Pools/2NO3nss5WoJFrL0i6xNMrH\nconst HOTEL_POOLS_ECLIPSE: Song = {\n  name: \"Eclipse\",\n  artist: \"Hotel Pools\",\n  bpm: 170,\n  durationS: 221,\n  filename: \"hotel_pools_eclipse.mp3\",\n  camelot: \"10A\",\n  video: \"https://www.youtube.com/watch?v=rYHNB_lPSNc\",\n};\n\nexport const songs = [\n  HOME_RESONANCE,\n  DAN_MASON_NOW_OR_NEVER,\n  HOME_HEAD_FIRST,\n  DANGER_2239,\n  STST_OVER_EASY,\n  VOYAGE_DYNAMIC,\n  LIMITLESS_ETHER,\n  HOTEL_POOLS_ECLIPSE,\n];\n","import {\n  Audio,\n  AudioListener,\n  AudioLoader,\n  Camera,\n  LoadingManager,\n} from \"three\";\n\nimport { Song, songs } from \"../../audio/songs\";\nimport AudioManager from \"../../manager/AudioManager\";\nimport { SceneSubject } from \"../SceneSubject\";\n\nexport class Songs implements SceneSubject {\n  name = \"Songs\";\n\n  private static LOAD_REMAINDER_DELAY = 3000;\n\n  private camera: Camera;\n  private listener: AudioListener;\n\n  constructor(camera: Camera) {\n    this.camera = camera;\n  }\n\n  async load(loadingManager: LoadingManager) {\n    this.listener = new AudioListener();\n    const loader = new AudioLoader(loadingManager);\n\n    const randomSong = this.getRandomSongToLoad();\n    const firstSong = await this.loadSong(loader, randomSong);\n    AudioManager.attach([firstSong]);\n\n    setTimeout(\n      () => this.loadAllSongsInBackground(loader, firstSong),\n      Songs.LOAD_REMAINDER_DELAY\n    );\n  }\n\n  attach() {\n    this.camera.add(this.listener);\n  }\n\n  private getRandomSongToLoad = (): Song => {\n    const randomIndex = Math.floor(Math.random() * songs.length);\n    return songs[randomIndex];\n  };\n\n  private loadAllSongsInBackground = async (\n    loader: AudioLoader,\n    songToSkip: Song & { audio: Audio }\n  ) => {\n    const remainingSongs = songs.filter(\n      (song) => song.name !== songToSkip.name\n    );\n    const loadedSongs = await Promise.all(\n      remainingSongs.map((song) => this.loadSong(loader, song))\n    );\n    const newSongList = [songToSkip, ...loadedSongs];\n    AudioManager.attach(newSongList);\n  };\n\n  private async loadSong(loader: AudioLoader, song: Song) {\n    return loader.loadAsync(`songs/${song.filename}`).then((buffer) => {\n      const audio = new Audio(this.listener);\n      audio.setBuffer(buffer);\n      audio.setLoop(false);\n      // Assign duration based on buffer length\n      if (audio.duration) {\n        song.durationS = audio.duration;\n      }\n      return { ...song, audio };\n    });\n  }\n}\n","import {\n  CubeTexture,\n  CubeTextureLoader,\n  Fog,\n  LoadingManager,\n  Scene,\n} from \"three\";\n\nimport { SceneSubject } from \"../SceneSubject\";\n\nexport class SkyBox implements SceneSubject {\n  name = \"Sky Box\";\n\n  private cubeTexture: CubeTexture;\n  private fog: Fog;\n\n  async load(loadingManager: LoadingManager) {\n    this.cubeTexture = new CubeTextureLoader(loadingManager)\n      .setPath(\"textures/cubemap/\")\n      .load([\"px.png\", \"nx.png\", \"py.png\", \"black.png\", \"black.png\", \"nz.png\"]);\n    this.fog = new Fog(0x111111, 1, 200);\n  }\n\n  attach(parent: Scene) {\n    parent.background = this.cubeTexture;\n    parent.fog = this.fog;\n  }\n}\n","import { Group, LoadingManager } from \"three\";\nimport { GLTF, GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nexport const loadGLTF = (\n  loadingManager: LoadingManager,\n  path: string\n): Promise<Group> => {\n  return new Promise(\n    (\n      resolve: (object: Group) => void,\n      reject: (err: Error | ErrorEvent) => void\n    ) => {\n      const gltfLoader = new GLTFLoader(loadingManager);\n      gltfLoader.load(\n        path,\n        (gltf: GLTF) => {\n          const group = new Group();\n          group.add(...gltf.scene.children);\n          resolve(group);\n        },\n        undefined,\n        (error: Error | ErrorEvent) => {\n          reject(error);\n        }\n      );\n    }\n  );\n};\n","import {\n  addLockedMousedownListener,\n  LockedMousedownEvent,\n} from \"../../events/lockedMousedown\";\nimport {\n  addSongPlayPauseListener,\n  dispatchSongPlayPauseEvent,\n  SongPlayPauseEvent,\n} from \"../../events/songPlayPause\";\nimport { dispatchSongSkipEvent } from \"../../events/songSkip\";\n\nexport class SongControls {\n  readonly div: HTMLDivElement;\n\n  private readonly back: HTMLButtonElement;\n  private readonly playPause: HTMLButtonElement;\n  private readonly forward: HTMLButtonElement;\n\n  private playing: boolean;\n\n  constructor() {\n    this.div = document.createElement(\"div\");\n    this.div.id = \"song-controls\"; // CSS affected\n    //\n    this.back = document.createElement(\"button\");\n    this.playPause = document.createElement(\"button\");\n    this.forward = document.createElement(\"button\");\n    this.handleSongPlayPause({ play: false });\n    this.setPlayControls();\n    // Subscribers\n    addLockedMousedownListener(this.handleLockedMousedown);\n    addSongPlayPauseListener(this.handleSongPlayPause);\n  }\n\n  private setPlayControls() {\n    // Back\n    this.back.innerHTML = \"<i class='fas fa-backward' />\";\n    this.back.addEventListener(\"click\", this.onSkipBackwardClick);\n    this.div.appendChild(this.back);\n    // Play/pause\n    this.playPause.addEventListener(\"click\", this.onPlayPauseClick);\n    this.playPause.id = \"song-playpause\"; // CSS affected\n    this.div.appendChild(this.playPause);\n    // Forward\n    this.forward.innerHTML = \"<i class='fas fa-forward' />\";\n    this.forward.addEventListener(\"click\", this.onSkipForwardClick);\n    this.div.appendChild(this.forward);\n  }\n\n  private readonly onSkipBackwardClick = (event?: Event) => {\n    event?.stopPropagation();\n    event?.preventDefault();\n    dispatchSongSkipEvent({ direction: \"backward\" });\n  };\n\n  private readonly onPlayPauseClick = (event?: Event) => {\n    event?.stopPropagation();\n    event?.preventDefault();\n    dispatchSongPlayPauseEvent({ play: !this.playing });\n  };\n\n  private readonly onSkipForwardClick = (event?: Event) => {\n    event?.stopPropagation();\n    event?.preventDefault();\n    dispatchSongSkipEvent({ direction: \"forward\" });\n  };\n\n  private readonly handleLockedMousedown = ({ x, y }: LockedMousedownEvent) => {\n    if (this.isInBounds(x, y, this.playPause)) {\n      this.onPlayPauseClick();\n    } else if (this.isInBounds(x, y, this.back)) {\n      this.onSkipBackwardClick();\n    } else if (this.isInBounds(x, y, this.forward)) {\n      this.onSkipForwardClick();\n    }\n  };\n\n  private isInBounds(x: number, y: number, element: HTMLElement): boolean {\n    const { top, bottom, left, right } = element.getBoundingClientRect();\n    return x >= left && x <= right && y >= top && y <= bottom;\n  }\n\n  private readonly handleSongPlayPause = ({ play }: SongPlayPauseEvent) => {\n    this.playing = play;\n    if (play) {\n      this.playPause.innerHTML = \"<i class='fas fa-pause' />\";\n      this.playPause.title = \"Pause\";\n    } else {\n      this.playPause.innerHTML = \"<i class='fas fa-play' />\";\n      this.playPause.title = \"Play\";\n    }\n  };\n}\n","import {\n  addSongMetadataListener,\n  SongMetadataEvent,\n} from \"../../events/songMetadata\";\n\nexport class SongMetadata {\n  private static NAME_SCROLL_OFFSET_MS = 8000;\n\n  readonly div: HTMLDivElement;\n  private songNameOffset: number | null;\n\n  constructor() {\n    this.div = document.createElement(\"div\");\n    this.div.id = \"song-metadata\"; // CSS affected\n    this.setSongInfo(\"No Artist\", \"No Song Name\");\n    // Subscribers\n    addSongMetadataListener(this.handleSongMetadata);\n  }\n\n  private setSongInfo(artist: string, name: string) {\n    // Reset metadata\n    this.div.innerHTML = \"\";\n    // Assign artist\n    const artistDiv = document.createElement(\"span\");\n    artistDiv.id = \"song-artist\"; // CSS affected\n    artistDiv.innerHTML = artist;\n    this.div.appendChild(artistDiv);\n    // Assign name\n    const nameDiv = document.createElement(\"span\");\n    nameDiv.id = \"song-name\"; // CSS affected\n    nameDiv.innerHTML = name;\n    this.div.appendChild(nameDiv);\n    this.checkSongNameOffset(nameDiv);\n  }\n\n  private checkSongNameOffset(element: HTMLElement) {\n    clearTimeout(this.songNameOffset);\n    this.showNameDiff(element);\n  }\n\n  private readonly showNameDiff = (element: HTMLElement) => {\n    const diff = element.offsetWidth - element.parentElement.offsetWidth;\n    if (diff <= 0) {\n      return;\n    }\n    element.style.transform = `translateX(-${diff + 8}px)`;\n    this.songNameOffset = window.setTimeout(\n      () => this.hideNameDiff(element),\n      SongMetadata.NAME_SCROLL_OFFSET_MS\n    );\n  };\n\n  private readonly hideNameDiff = (element: HTMLElement) => {\n    element.style.transform = `translateX(0px)`;\n    this.songNameOffset = window.setTimeout(\n      () => this.showNameDiff(element),\n      SongMetadata.NAME_SCROLL_OFFSET_MS\n    );\n  };\n\n  private readonly handleSongMetadata = ({ song }: SongMetadataEvent) => {\n    this.setSongInfo(song.artist, song.name);\n  };\n}\n","import { addSongSpeedListener } from \"../../events/songSpeed\";\nimport { SongSpeedEvent } from \"./../../events/songSpeed\";\n\nexport class Speedometer {\n  readonly div: HTMLDivElement;\n\n  constructor() {\n    this.div = document.createElement(\"div\");\n    this.div.id = \"speedometer\"; // CSS affected\n    // Subscribers\n    addSongSpeedListener(this.handleSongSpeed);\n  }\n\n  private assignSpeed(speed: number) {\n    this.div.innerHTML = \"\";\n    //\n    const speedName = document.createElement(\"span\");\n    speedName.innerHTML = \"Speed\";\n    this.div.appendChild(speedName);\n    //\n    const speedAmount = document.createElement(\"div\");\n    const numberSpan = document.createElement(\"span\");\n    numberSpan.id = \"speed\";\n    numberSpan.innerHTML = `${speed}`;\n    speedAmount.appendChild(numberSpan);\n    const speedSuffix = document.createElement(\"span\");\n    speedSuffix.innerHTML = \" bpm\";\n    speedAmount.appendChild(speedSuffix);\n    this.div.appendChild(speedAmount);\n  }\n\n  private readonly handleSongSpeed = ({ bpm }: SongSpeedEvent) => {\n    this.assignSpeed(bpm);\n  };\n}\n","import { Object3D } from \"three\";\n\nimport { addLockedMousemoveListener } from \"../../events/lockedMousemove\";\nimport { dispatchScreenAttachEvent } from \"../../events/screenAttach\";\nimport CameraManager from \"../../manager/CameraManager\";\nimport { SongControls } from \"./SongControls\";\nimport { SongMetadata } from \"./SongMetadata\";\nimport { Speedometer } from \"./Speedometer\";\n\nexport class ScreenDOM {\n  readonly div: HTMLDivElement;\n\n  private readonly lockPointer: HTMLDivElement;\n  private intersectObject: Object3D | null;\n\n  private readonly speedometer: Speedometer;\n  private readonly metadata: SongMetadata;\n  private readonly controls: SongControls;\n\n  constructor() {\n    this.div = document.createElement(\"div\");\n    this.div.id = \"screen\"; // CSS affected\n    //\n    this.intersectObject = null;\n    this.lockPointer = document.createElement(\"div\");\n    this.lockPointer.id = \"lockpointer\";\n    this.lockPointer.classList.add(\"hidden\");\n    document.body.appendChild(this.lockPointer);\n    //\n    this.speedometer = new Speedometer();\n    this.div.appendChild(this.speedometer.div);\n    this.appendDivider();\n    //\n    this.metadata = new SongMetadata();\n    this.div.appendChild(this.metadata.div);\n    //\n    this.controls = new SongControls();\n    this.div.appendChild(this.controls.div);\n    // Subscribers\n    dispatchScreenAttachEvent({ screen: this.div });\n    addLockedMousemoveListener(this.checkScreenIntersect);\n  }\n\n  setIntersect(object: Object3D) {\n    this.intersectObject = object;\n  }\n\n  private appendDivider() {\n    const divider = document.createElement(\"hr\");\n    divider.className = \"divider\";\n    this.div.appendChild(divider);\n  }\n\n  private readonly checkScreenIntersect = () => {\n    if (this.intersectObject === null) return;\n    const intersects = CameraManager.raycaster.intersectObject(\n      this.intersectObject\n    );\n    if (intersects.length > 0) {\n      this.lockPointer.classList.remove(\"hidden\");\n    } else {\n      this.lockPointer.classList.add(\"hidden\");\n    }\n  };\n}\n","import { FFT_SIZE, N_BANDS } from \"../../utils/constants\";\nimport fragmentShader from \"./visualizer_frag.glsl\";\nimport vertexShader from \"./visualizer_vert.glsl\";\n\nexport const VisualizerShader = {\n  defines: {\n    BIN_SIZE: FFT_SIZE / 2,\n    N_BANDS,\n  },\n  uniforms: {\n    frequencies: { type: \"t\", value: new Float32Array(FFT_SIZE / 2) },\n  },\n  fragmentShader,\n  vertexShader,\n};\n","export default \"varying float sV;\\nvarying vec2 vUv;\\n\\nvec3 yellow = vec3(0.988, 0.804, 0.020);\\nvec3 purple = vec3(1.000, 0.000, 0.988);\\n\\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\\n  vec3 col = vec3(0.0);\\n  vec2 pct = vUv * 2.0;\\n\\n  float nBands = float(N_BANDS);\\n  float idx = floor(vUv.x * nBands);\\n  float band = idx / nBands;\\n  band = band * band;\\n\\n  float f = fract(vUv.x * nBands);\\n  \\n  // More purple as sV approaches 0\\n  vec3 gradient = mix(yellow, purple, sV);\\n\\n  col += vec3(1.0 - step(0.0, pct.y - sV * 1.5));\\n  col *= gradient;\\n  \\n  // Simulate spacing\\n  col *= step(0.05, f);\\n  col *= step(f, 0.95);\\n\\n  col = clamp(col, 0.0, 1.0);\\n\\n  if (length(col) <= 0.05) {\\n    fragColor = vec4(0.0);\\n  } else {\\n\\t  fragColor = vec4(col, 1.0);\\n  }\\n }\\n\\n\\nvoid main() {\\n  mainImage(gl_FragColor, gl_FragCoord.xy);\\n}\\n\";","export default \"uniform sampler2D frequencies;\\n\\nconst int lod = 0;\\n\\nvarying float sV;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  // We only care about the first 18k hz, in a full 24k\\n  float fft = float(BIN_SIZE) * 0.75;\\n  int xIdx = int(uv.x * fft);\\n  // Grab a frequency value and set the range 0.0 to 1.0\\n  sV = texelFetch(frequencies, ivec2(xIdx, 0), lod).x / 255.;\\n  // Pass UV for pct calculations\\n  vUv = uv;\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\\n\";","import {\n  DataTexture,\n  FloatType,\n  Mesh,\n  Object3D,\n  PlaneGeometry,\n  RedFormat,\n  ShaderMaterial,\n  Vector3,\n} from \"three\";\n\nimport {\n  addSongFrequencyListener,\n  SongFrequencyEvent,\n} from \"../../events/songFrequency\";\nimport { N_BANDS } from \"../../utils/constants\";\nimport { VisualizerShader } from \"../shaders/VisualizerShader\";\nimport { FFT_SIZE } from \"./../../utils/constants\";\nimport { SceneSubject } from \"./../SceneSubject\";\n\nexport class SongVisualizer implements SceneSubject {\n  name = \"SongVisualizer\";\n\n  private mesh: Mesh;\n  private material: ShaderMaterial;\n\n  constructor() {\n    addSongFrequencyListener(this.handleSongFrequency);\n  }\n\n  async load() {\n    const geometry = new PlaneGeometry(0.15, 0.15, N_BANDS * 2);\n    this.material = new ShaderMaterial({\n      ...VisualizerShader,\n      transparent: true,\n    });\n\n    this.mesh = new Mesh(geometry, this.material);\n    this.mesh.position.set(0, 0.375, -0.4);\n  }\n\n  attach(parent: Object3D) {\n    parent.add(this.mesh);\n  }\n\n  setRotation(xRotation: number) {\n    this.mesh.setRotationFromAxisAngle(new Vector3(1, 0, 0), xRotation);\n  }\n\n  private readonly handleSongFrequency = ({\n    frequencyData,\n  }: SongFrequencyEvent) => {\n    if (this.material) {\n      const dataTexture = this.toDataTexture(frequencyData);\n      this.material.uniforms.frequencies.value = dataTexture;\n    }\n  };\n\n  private toDataTexture(frequencyData: Uint8Array) {\n    const height = 1;\n    const width = FFT_SIZE / 2;\n    const floatArray = new Float32Array(frequencyData);\n    return new DataTexture(floatArray, width, height, RedFormat, FloatType);\n  }\n}\n","import { Mesh, Object3D, Vector3 } from \"three\";\nimport { CSS3DObject } from \"three/examples/jsm/renderers/CSS3DRenderer\";\n\nimport { CSS_DISTANCE } from \"./../../utils/constants\";\nimport { SceneSubject } from \"./../SceneSubject\";\nimport { ScreenDOM } from \"./ScreenDOM\";\nimport { SongVisualizer } from \"./SongVisualizer\";\n\nexport class Screen implements SceneSubject {\n  name = \"Screen\";\n\n  private object: Object3D;\n  private readonly screenDOM: ScreenDOM;\n  private readonly visualizer: SongVisualizer;\n\n  constructor() {\n    this.screenDOM = new ScreenDOM();\n    this.visualizer = new SongVisualizer();\n  }\n\n  async load() {\n    this.object = new Object3D();\n    const css3dObject = new CSS3DObject(this.screenDOM.div);\n    this.object.add(css3dObject);\n\n    await this.visualizer.load();\n  }\n\n  attach(parent: Object3D) {\n    this.copyWorldPosition(parent as Mesh, this.object);\n    this.object.updateWorldMatrix(false, true);\n    this.screenDOM.setIntersect(parent);\n    parent.add(this.object);\n    this.visualizer.attach(parent);\n    this.visualizer.setRotation(this.getXRotation(parent as Mesh));\n  }\n\n  private copyWorldPosition(source: Mesh, dest: Object3D) {\n    // Whole lotta guess-and-check\n    const pos = new Vector3(0.685, -0.49, -0.1).multiplyScalar(CSS_DISTANCE);\n    dest.position.set(pos.x, pos.y, pos.z);\n    // Rotation\n    const rotationX = this.getXRotation(source);\n    dest.rotateX(rotationX);\n    // Sizing\n    this.applyScale(source);\n    // For update\n    dest.updateMatrix();\n  }\n\n  private applyScale(source: Mesh) {\n    const { max, min } = source.geometry.boundingBox;\n    const deltaX = Math.abs(max.x - min.x);\n    const deltaY = Math.abs(max.y - min.y);\n    this.screenDOM.div.style.width = `${deltaX * 2 * CSS_DISTANCE}px`;\n    this.screenDOM.div.style.height = `${deltaY * 2.35 * CSS_DISTANCE}px`;\n  }\n\n  // Get X rotation in radians\n  private getXRotation(source: Mesh) {\n    const { max, min } = source.geometry.boundingBox;\n    // Why 1.21? Why not?\n    const deltaX = 1.21 * Math.abs(max.x - min.x);\n    const deltaY = Math.abs(max.y - min.y);\n    return -Math.atan(deltaX / deltaY);\n  }\n}\n","import {\n  Camera,\n  Group,\n  LoadingManager,\n  Mesh,\n  Object3D,\n  PointLight,\n} from \"three\";\n\nimport { addToWindow } from \"../../utils/addToWindow\";\nimport { CAR_X_OFFSET, PURPLE } from \"../../utils/constants\";\nimport { loadGLTF } from \"../../utils/loadGLTF\";\nimport { SceneSubject } from \"../SceneSubject\";\nimport { Screen } from \"./Screen\";\n\nexport class Car implements SceneSubject {\n  name = \"Car\";\n\n  private static GROUP_NAME = \"CAR_CAMERA_GROUP\";\n\n  private readonly camera: Camera;\n  private chassis: Group;\n  private readonly screen: Screen;\n\n  constructor(camera: Camera) {\n    this.camera = camera;\n    this.screen = new Screen();\n  }\n\n  async load(loadingManager: LoadingManager) {\n    this.chassis = await loadGLTF(loadingManager, \"models/chassis.gltf\");\n    await this.screen.load();\n    // Fine tuning the chassis around origin\n    this.applyOffset(this.chassis);\n    this.chassis.castShadow = true;\n    this.chassis.receiveShadow = true;\n    addToWindow(\"chassis\", this.screen);\n  }\n\n  attach(parent: Object3D) {\n    const screenMesh = this.getScreenMesh(this.chassis);\n    this.screen.attach(screenMesh);\n\n    const group = new Group();\n    group.name = Car.GROUP_NAME;\n    group.add(this.chassis);\n    group.add(this.camera);\n    group.add(this.getPointLight());\n    parent.add(group);\n  }\n\n  private applyOffset(object: Object3D) {\n    object.position.x = CAR_X_OFFSET;\n    object.position.y = -0.7;\n    object.position.z = -0.1;\n  }\n\n  private getScreenMesh(group: Object3D): Mesh | null {\n    let screen = group.children.find((child) => child.name === \"Screen\");\n    if (screen) {\n      return screen as Mesh;\n    }\n    for (const child of group.children) {\n      let screen = this.getScreenMesh(child);\n      if (screen) {\n        return screen;\n      }\n    }\n    return null;\n  }\n\n  private getPointLight() {\n    const light = new PointLight(PURPLE, 0.2);\n    this.applyOffset(light);\n    light.position.y = 0.1;\n    light.lookAt(0, -3, -3);\n    return light;\n  }\n}\n","export const addToWindow = (name: string, item: any) => {\n  const w = window as any;\n  w[name] = item;\n};\n","import { BoxGeometry, Mesh, MeshPhongMaterial, Scene } from \"three\";\n\nimport { addFrameListener } from \"../../events/frame\";\nimport { SceneSubject } from \"../SceneSubject\";\n\nexport class Cube implements SceneSubject {\n  name = \"Cube\";\n\n  private cube: Mesh;\n\n  constructor() {\n    addFrameListener(this.handleFrame);\n  }\n\n  async load() {\n    const geometry = new BoxGeometry();\n    const material = new MeshPhongMaterial({\n      color: 0x00ff00,\n      opacity: 0,\n      transparent: true,\n    });\n    this.cube = new Mesh(geometry, material);\n  }\n\n  attach(scene: Scene) {\n    this.cube.position.z -= 5;\n    scene.add(this.cube);\n  }\n\n  private readonly handleFrame = () => {\n    if (this.cube) {\n      this.cube.rotation.x += 0.005;\n      this.cube.rotation.y += 0.005;\n    }\n  };\n}\n","import { AmbientLight, HemisphereLight, Object3D, PointLight } from \"three\";\n\nimport { addSongFrequencyListener } from \"../../events/songFrequency\";\nimport { PURPLE, YELLOW } from \"../../utils/constants\";\nimport { SceneSubject } from \"../SceneSubject\";\nimport { SongFrequencyEvent } from \"./../../events/songFrequency\";\n\nexport class Lighting implements SceneSubject {\n  name = \"Environment Lighting\";\n\n  private ambientLight: AmbientLight;\n  private pointLight: PointLight;\n  private hemisphereLight: HemisphereLight;\n\n  constructor() {\n    addSongFrequencyListener(this.handleSongFrequency);\n  }\n\n  async load() {\n    this.ambientLight = new AmbientLight(0xffffff, 0.1);\n    this.pointLight = new PointLight(0xffffff, 0.1);\n    this.pointLight.position.set(1, 2, 3);\n    this.hemisphereLight = new HemisphereLight(YELLOW, PURPLE, 0.1);\n    this.hemisphereLight.position.set(0, 50, 0);\n  }\n\n  attach(parent: Object3D) {\n    parent.add(this.ambientLight);\n    parent.add(this.hemisphereLight);\n    // parent.add(this.pointLight);\n  }\n\n  private readonly handleSongFrequency = ({\n    averageFrequency,\n  }: SongFrequencyEvent) => {\n    const increase = (0.1 * averageFrequency) / 255;\n    this.ambientLight.intensity = 0.1 + increase;\n    this.hemisphereLight.intensity = 0.1 + increase;\n  };\n}\n","import { Mesh, MeshLambertMaterial, Object3D, PlaneGeometry } from \"three\";\n\nimport { addFrameListener } from \"../../events/frame\";\nimport { SceneSubject } from \"../SceneSubject\";\n\nexport class Mountains implements SceneSubject {\n  name = \"Mountains\";\n\n  private static Z_DISTANCE = 400;\n\n  private plane: Mesh;\n\n  private geometry: PlaneGeometry;\n  private zDiffs: number[];\n\n  constructor() {\n    addFrameListener(this.handleFrame);\n  }\n\n  async load() {\n    this.geometry = new PlaneGeometry(160, 80, 20, 10);\n    const material = new MeshLambertMaterial({ color: 0x000000 });\n    this.zDiffs = Array(this.geometry.vertices.length).fill(0);\n    this.plane = new Mesh(this.geometry, material);\n    this.plane.rotateX(-Math.PI / 4);\n    this.plane.position.set(0, -20, -Mountains.Z_DISTANCE);\n  }\n\n  attach(parent: Object3D) {\n    parent.add(this.plane);\n  }\n\n  private readonly handleFrame = () => {\n    this.assignRandomDiffs();\n  };\n\n  private assignRandomDiffs() {\n    for (let idx = 0; idx < this.zDiffs.length; idx++) {\n      const diff = this.zDiffs[idx];\n      if (diff < 0.01 && diff > -0.01) {\n        this.zDiffs[idx] =\n          Math.random() * 20 + 10 - this.geometry.vertices[idx].z;\n      } else {\n        const pct = 0.015;\n        this.zDiffs[idx] = diff * (1 - pct);\n        this.geometry.vertices[idx].z += diff * pct;\n      }\n    }\n    this.geometry.verticesNeedUpdate = true;\n    this.geometry.normalsNeedUpdate = true;\n  }\n}\n","import { addSongSpeedListener, SongSpeedEvent } from \"../../events/songSpeed\";\n\nexport abstract class MovingObject {\n  private static MS_PER_MINUTE = 60000;\n\n  protected offsetMultiplier: number;\n  protected offsetPerMS: number;\n\n  constructor() {\n    this.offsetMultiplier = 1;\n    this.offsetPerMS = 0;\n    addSongSpeedListener(this.handleSongSpeed);\n  }\n\n  private readonly handleSongSpeed = ({ bpm }: SongSpeedEvent) => {\n    const newOffset =\n      (bpm / MovingObject.MS_PER_MINUTE) * this.offsetMultiplier;\n    this.offsetPerMS = newOffset;\n  };\n}\n","import {\n  LoadingManager,\n  Mesh,\n  MeshPhongMaterial,\n  Object3D,\n  PlaneGeometry,\n  RepeatWrapping,\n  Texture,\n  TextureLoader,\n} from \"three\";\n\nimport { addFrameListener, FrameEvent } from \"../../events/frame\";\nimport { SceneSubject } from \"../SceneSubject\";\nimport { MovingObject } from \"./MovingObject\";\n\nexport class Pavement extends MovingObject implements SceneSubject {\n  name = \"Pavement\";\n\n  static SQUARE_SIZE = 10;\n  static OFFSET_MULTIPLIER = 2;\n\n  private static NINTETY_DEGREES = Math.PI / 2;\n  private static DISTANCE = 600;\n\n  private height: number;\n  private width: number;\n\n  private plane: Mesh;\n  private texture: Texture;\n\n  constructor() {\n    super();\n    this.height = Pavement.SQUARE_SIZE;\n    this.width = this.height + Pavement.DISTANCE;\n    this.offsetMultiplier = Pavement.OFFSET_MULTIPLIER;\n    addFrameListener(this.handleFrame);\n  }\n\n  async load(loadingManager: LoadingManager) {\n    this.texture = await new TextureLoader(loadingManager).loadAsync(\n      \"textures/road/pavement.png\"\n    );\n    // Apply wrapping to texture so it fits in the correct scale. Width is always greater\n    this.texture.wrapS = RepeatWrapping;\n    this.texture.repeat.set(this.width / this.height, 1);\n    this.texture.anisotropy = 16;\n    const material = new MeshPhongMaterial({\n      map: this.texture,\n      shininess: 0,\n    });\n    const geometry = new PlaneGeometry(this.width, this.height, 32);\n    this.plane = new Mesh(geometry, material);\n    // Rotate so lengthwise\n    this.plane.rotation.x = -Pavement.NINTETY_DEGREES;\n    this.plane.rotation.z = Pavement.NINTETY_DEGREES;\n  }\n\n  attach(parent: Object3D) {\n    parent.add(this.plane);\n  }\n\n  private readonly handleFrame = ({ delta }: FrameEvent) => {\n    const newOffset = (this.texture.offset.x + delta * this.offsetPerMS) % 1;\n    this.texture.offset.x = newOffset;\n  };\n}\n","import { Box3, Group, LoadingManager, Object3D, SpotLight } from \"three\";\n\nimport { addFrameListener, FrameEvent } from \"../../events/frame\";\nimport { loadGLTF } from \"../../utils/loadGLTF\";\nimport { SceneSubject } from \"../SceneSubject\";\nimport { MovingObject } from \"./MovingObject\";\nimport { Pavement } from \"./Pavement\";\n\nexport class Lamps extends MovingObject implements SceneSubject {\n  name = \"Lamps\";\n\n  static GAP_DISTANCE = 80;\n  private static TOTAL_DISTANCE = 200;\n\n  private lampModel: Group;\n  private lampsGroup: Group;\n\n  constructor() {\n    super();\n    this.offsetMultiplier =\n      (Pavement.SQUARE_SIZE / Lamps.GAP_DISTANCE) * Pavement.OFFSET_MULTIPLIER;\n    addFrameListener(this.handleFrame);\n  }\n\n  async load(loadingManager: LoadingManager) {\n    this.lampModel = await loadGLTF(loadingManager, \"models/lamp.gltf\");\n  }\n\n  attach(parent: Object3D) {\n    const leftSide = this.buildSide(true);\n    const rightSide = this.buildSide(false);\n    this.lampsGroup = new Group();\n    this.lampsGroup.add(leftSide, rightSide);\n    parent.add(this.lampsGroup);\n  }\n\n  private readonly handleFrame = ({ delta }: FrameEvent) => {\n    const distance = Lamps.GAP_DISTANCE * this.offsetPerMS;\n    const newOffset =\n      (this.lampsGroup.position.z + delta * distance) % Lamps.GAP_DISTANCE;\n    this.lampsGroup.position.z = newOffset;\n  };\n\n  private buildSide(left: boolean): Group {\n    const sideGroup = new Group();\n    for (\n      let zOffset = -Lamps.TOTAL_DISTANCE;\n      zOffset <= Lamps.GAP_DISTANCE;\n      zOffset += Lamps.GAP_DISTANCE\n    ) {\n      const lampItem = this.lampModel.clone(true);\n      lampItem.scale.x *= left ? -1 : 1;\n      this.addLightToLamp(lampItem);\n      lampItem.position.z = zOffset;\n      sideGroup.add(lampItem);\n    }\n    sideGroup.position.x = left ? -4 : 4;\n    return sideGroup;\n  }\n\n  private addLightToLamp(lamp: Group) {\n    const spotlight = new SpotLight(0xffffdd);\n    spotlight.intensity = 2;\n    spotlight.penumbra = 0.5;\n    const boundingBox = new Box3().setFromObject(lamp);\n    const x = boundingBox.min.x;\n    const y = boundingBox.max.y;\n    const z = (boundingBox.max.z + boundingBox.min.z) / 2;\n    spotlight.position.set(x, y, z);\n    spotlight.lookAt(x, 0, z);\n    lamp.add(spotlight);\n    lamp.add(spotlight.target); // This is to avoid all lights pointing at origin\n  }\n}\n","import {\n  BoxBufferGeometry,\n  DynamicDrawUsage,\n  InstancedMesh,\n  LoadingManager,\n  Matrix4,\n  MeshBasicMaterial,\n  Object3D,\n  Quaternion,\n  RepeatWrapping,\n  Texture,\n  TextureLoader,\n  Vector3,\n} from \"three\";\n\nimport { addFrameListener, FrameEvent } from \"../../events/frame\";\nimport { SceneSubject } from \"../SceneSubject\";\nimport { Lamps } from \"./Lamps\";\nimport { MovingObject } from \"./MovingObject\";\nimport { Pavement } from \"./Pavement\";\n\nexport class Buildings extends MovingObject implements SceneSubject {\n  name = \"Buildings\";\n\n  private static Z_DISTANCE = 480; // 30 long\n  private static MAX_WIDTH_SQUARES = 3;\n  private static SQUARE_SIZE = 12;\n  private static FULL_SQUARE_SIZE = 16;\n  private static VERTICAL_SCALE = 8;\n\n  private static ROTATE_O = true;\n  private static ROTATE_AFFECTED_ROWS = 15;\n  private static ROTATE_MIN = Math.PI / 3;\n\n  private readonly instanceCount: number;\n  private readonly length: number;\n  private readonly width: number;\n\n  // Eventually, it will be necessary to pass all materials in an InstancedBufferAttribute\n  // and randomly select from that array to simulate better random buildings\n  private leftInstance: InstancedMesh;\n  private rightInstance: InstancedMesh;\n\n  // Used to track which z-row in the instances is closest to z=0\n  private lastZOffset: number;\n\n  constructor() {\n    super();\n    this.length = Math.floor(Buildings.Z_DISTANCE / Buildings.FULL_SQUARE_SIZE);\n    this.width = Buildings.MAX_WIDTH_SQUARES;\n    this.instanceCount = this.length * this.width;\n\n    this.lastZOffset = 0;\n    // Copied from Lamps\n    this.offsetMultiplier =\n      (Pavement.SQUARE_SIZE / Lamps.GAP_DISTANCE) * Pavement.OFFSET_MULTIPLIER;\n    addFrameListener(this.handleFrame);\n  }\n\n  async load(loadingManager: LoadingManager) {\n    const texture: Texture = await new TextureLoader(loadingManager).loadAsync(\n      \"textures/skyscraper/basic.jpg\"\n    );\n    texture.wrapS = RepeatWrapping;\n    texture.wrapT = RepeatWrapping;\n    texture.anisotropy = 16;\n    texture.repeat.set(1, 2);\n\n    this.leftInstance = this.buildingMesh(texture);\n    this.leftInstance.position.x = -Pavement.SQUARE_SIZE * 3;\n\n    this.rightInstance = this.buildingMesh(texture);\n    this.rightInstance.position.x = Pavement.SQUARE_SIZE * 3;\n\n    for (let length = 0; length < this.length; length++) {\n      this.computeRow(length, 0);\n    }\n  }\n\n  private buildingMesh(texture: Texture): InstancedMesh {\n    const baseSize = Buildings.SQUARE_SIZE;\n    const minHeight = Buildings.SQUARE_SIZE * Buildings.VERTICAL_SCALE;\n    const boxGeometry = new BoxBufferGeometry(baseSize, minHeight, baseSize);\n    const material = new MeshBasicMaterial({ map: texture });\n    const mesh = new InstancedMesh(boxGeometry, material, this.instanceCount);\n    mesh.instanceMatrix.setUsage(DynamicDrawUsage);\n    return new InstancedMesh(boxGeometry, material, this.instanceCount);\n  }\n\n  private computeRow(zRow: number, iterations: number) {\n    // Discardable matrix instance\n    const matrix = new Matrix4();\n\n    for (let width = 0; width < this.width; width++) {\n      let offset = Buildings.FULL_SQUARE_SIZE / 2;\n      // Use full square size offset on the last row to hide skybox\n      offset *= width + 1 === this.width ? 2 : 1;\n      // Apply a z-offset based on how many times this row has been generated\n      const zIterOffset = iterations * Buildings.Z_DISTANCE;\n      const x = offset + Buildings.FULL_SQUARE_SIZE * width;\n      // Make buildings closer to the road appear shorter\n      let y = (Buildings.FULL_SQUARE_SIZE / -4) * (this.width - width);\n      // Apply random vertical manipulation\n      y -= Math.random() * 2.5 * Buildings.FULL_SQUARE_SIZE - offset;\n      const z = offset + Buildings.FULL_SQUARE_SIZE * zRow + zIterOffset;\n      // Index of the matrix in the instance mesh\n      const idx = zRow * this.width + width;\n\n      this.leftInstance.setMatrixAt(\n        idx,\n        matrix.setPosition(new Vector3(-x, y, -z))\n      );\n      this.rightInstance.setMatrixAt(\n        idx,\n        matrix.setPosition(new Vector3(x, y, -z))\n      );\n    }\n\n    // Necessary to recompute entire instance\n    this.leftInstance.instanceMatrix.needsUpdate = true;\n    this.rightInstance.instanceMatrix.needsUpdate = true;\n  }\n\n  attach(parent: Object3D) {\n    parent.add(this.leftInstance, this.rightInstance);\n  }\n\n  private readonly handleFrame = ({ delta }: FrameEvent) => {\n    const distance = Lamps.GAP_DISTANCE * this.offsetPerMS * delta;\n    const newOffset = this.leftInstance.position.z + distance;\n\n    while (newOffset > this.lastZOffset + Buildings.FULL_SQUARE_SIZE * 4) {\n      const iterations =\n        1 + Math.floor(this.lastZOffset / Buildings.Z_DISTANCE);\n      const zRow =\n        (this.lastZOffset % Buildings.Z_DISTANCE) / Buildings.FULL_SQUARE_SIZE;\n      this.computeRow(zRow, iterations);\n      this.lastZOffset += Buildings.FULL_SQUARE_SIZE;\n    }\n\n    if (Buildings.ROTATE_O) {\n      this.computeRotateO();\n    }\n\n    this.leftInstance.position.z = newOffset;\n    this.rightInstance.position.z = newOffset;\n  };\n\n  private computeRotateO() {\n    const closestRow =\n      (this.lastZOffset % Buildings.Z_DISTANCE) / Buildings.FULL_SQUARE_SIZE;\n    const offset =\n      (this.lastZOffset +\n        Buildings.FULL_SQUARE_SIZE * 4 -\n        this.leftInstance.position.z) /\n      Buildings.FULL_SQUARE_SIZE;\n\n    const stepSize = 1 / Buildings.ROTATE_AFFECTED_ROWS;\n\n    for (let idx = 0; idx < this.length; idx++) {\n      const zRow = (closestRow + idx) % this.length;\n      let theta = 0;\n\n      // Only apply theta in the further rows\n      if (this.length - idx <= Buildings.ROTATE_AFFECTED_ROWS) {\n        const step = Buildings.ROTATE_AFFECTED_ROWS - (this.length - idx);\n        const pctOffset = Math.min(step * stepSize + offset * stepSize, 1);\n        theta = pctOffset * Buildings.ROTATE_MIN;\n      }\n\n      this.applyRowRotation(this.leftInstance, zRow, theta);\n      this.applyRowRotation(this.rightInstance, zRow, -theta);\n    }\n  }\n\n  private applyRowRotation(\n    instancedMesh: InstancedMesh,\n    zRow: number,\n    theta: number\n  ) {\n    const position = new Vector3();\n    const quaternion = new Quaternion();\n    const scale = new Vector3();\n\n    for (let width = 0; width < this.width; width++) {\n      const mIdx = zRow * this.width + width;\n\n      let matrix = new Matrix4();\n      instancedMesh.getMatrixAt(mIdx, matrix);\n      matrix.decompose(position, quaternion, scale);\n      const yOffset = position.y;\n      position.y = 0;\n      quaternion.setFromAxisAngle(new Vector3(0, 0, 1), theta);\n      matrix = matrix.compose(position, quaternion, scale);\n      matrix = matrix.setPosition(position.x, yOffset, position.z);\n      instancedMesh.setMatrixAt(mIdx, matrix);\n    }\n\n    instancedMesh.instanceMatrix.needsUpdate = true;\n  }\n\n  private;\n}\n","import { Group, LoadingManager, Object3D } from \"three\";\n\nimport { CAR_X_OFFSET } from \"../../utils/constants\";\nimport { SceneSubject } from \"../SceneSubject\";\nimport { Buildings } from \"./Buildings\";\nimport { Lamps } from \"./Lamps\";\nimport { Pavement } from \"./Pavement\";\n\nexport class Road implements SceneSubject {\n  name = \"Road\";\n\n  private readonly subjects: SceneSubject[];\n  private readonly group: Group;\n\n  constructor() {\n    this.subjects = [new Lamps(), new Pavement(), new Buildings()];\n    this.group = new Group();\n    this.group.name = \"Road\";\n  }\n\n  async load(loadingManager: LoadingManager) {\n    // Offset from car\n    this.group.position.x = CAR_X_OFFSET * 2; // 2x the Car x offset\n    this.group.position.y = -1.5;\n\n    await Promise.all(\n      this.subjects.map((object) => object.load(loadingManager))\n    );\n  }\n\n  attach(parent: Object3D) {\n    this.subjects.forEach((object) => {\n      object.attach(this.group);\n    });\n    parent.add(this.group);\n  }\n}\n","import { LoadingManager, Scene } from \"three\";\n\nimport CameraManager from \"../manager/CameraManager\";\nimport { isDevelopment } from \"../utils/isDevelopment\";\nimport { Songs } from \"./audio/Songs\";\nimport { SkyBox } from \"./background/SkyBox\";\nimport { Car } from \"./car/Car\";\nimport { Cube } from \"./cube/Cube\";\nimport { Lighting } from \"./environment/Lighting\";\nimport { Mountains } from \"./environment/Mountains\";\nimport { Road } from \"./road/Road\";\nimport { SceneSubject } from \"./SceneSubject\";\n\nexport const buildScene = async (\n  scene: Scene,\n  loadingManager: LoadingManager\n): Promise<boolean> => {\n  const sceneSubjects: SceneSubject[] = [\n    new Songs(CameraManager.camera),\n    new SkyBox(),\n    new Car(CameraManager.camera),\n    new Cube(),\n    new Lighting(),\n    new Mountains(),\n    new Road(),\n  ];\n  // Perform asset loading\n  try {\n    const loadTimes = await Promise.all(\n      sceneSubjects.map((subject) =>\n        measurePromise(subject.name, () => subject.load(loadingManager))\n      )\n    );\n    if (isDevelopment()) {\n      console.info(loadTimes);\n    }\n  } catch (err) {\n    console.error(err);\n    return false;\n  }\n\n  // Attach each object to the scene\n  sceneSubjects.forEach((subject) => subject.attach(scene));\n  return true;\n};\n\nconst measurePromise = (\n  name: string,\n  fn: () => Promise<any>\n): Promise<[string, number]> => {\n  const onPromiseDone = (): [string, number] => [\n    name,\n    performance.now() - start,\n  ];\n  const start = performance.now();\n  return fn().then(onPromiseDone, onPromiseDone);\n};\n","import { LoadingManager } from \"three\";\n\nimport { buildControls } from \"./dom/buildControls\";\nimport { displayError } from \"./dom/displayError\";\nimport { displaySplash } from \"./dom/displaySplash\";\nimport { displayStats } from \"./dom/displayStats\";\nimport AudioManager from \"./manager/AudioManager\";\nimport SceneManager from \"./manager/SceneManager\";\nimport TimeManager from \"./manager/TimeManager\";\nimport { buildScene } from \"./scene/buildScene\";\n\nconst launch = async (loadingManager: LoadingManager, withSound: boolean) => {\n  const splashContainer = document.getElementById(\n    \"splash-container\"\n  ) as HTMLDivElement;\n  const canvasContainer = document.getElementById(\n    \"canvas-container\"\n  ) as HTMLDivElement;\n  SceneManager.attach(canvasContainer);\n\n  const built = await buildScene(SceneManager.scene, loadingManager);\n  if (!built) {\n    displayError(splashContainer);\n    return;\n  }\n\n  buildControls(canvasContainer);\n\n  splashContainer.classList.add(\"hidden\");\n  canvasContainer.classList.add(\"fade-in\");\n  canvasContainer.classList.remove(\"hidden\");\n\n  displayStats(canvasContainer);\n\n  AudioManager.start(withSound);\n  TimeManager.play();\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const splashContainer = document.getElementById(\n    \"splash-container\"\n  ) as HTMLDivElement;\n  displaySplash(splashContainer, launch);\n});\n","export const displayError = (container: HTMLElement) => {\n  const element = document.createElement(\"p\");\n  element.style.textAlign = \"center\";\n  element.innerHTML =\n    \"There was an error loading. Please refresh and try again\";\n  container.innerHTML = \"\";\n  container.appendChild(element);\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\nvar deferredModules = [\n\t[11,937]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = () => {\n\n};\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = () => {\n\n\t\t}\n\t}\n\treturn result;\n}\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = () => {\n\n\t}\n\tchunkLoadingGlobal = chunkLoadingGlobal.slice();\n\tfor(var i = 0; i < chunkLoadingGlobal.length; i++) webpackJsonpCallback(chunkLoadingGlobal[i]);\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tparentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = this[\"webpackChunkhyperdrive\"] = this[\"webpackChunkhyperdrive\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = webpackJsonpCallback;","// run startup\nreturn __webpack_require__.x();\n"],"sourceRoot":""}